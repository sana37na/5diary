{"ast":null,"code":"var _jsxFileName = \"/Users/sanami/Desktop/react/webgl/src/pages/1.js\";\nimport React, { Suspense } from \"react\";\nimport { OrbitControls } from '@react-three/drei';\nimport { useRef, useState } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber';\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport Interfase from \"./../components/Interface\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Num1 = props => {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  function Box(props) {\n    _s();\n\n    const mesh = useRef();\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      castShadow: true,\n      receiveShadow: true,\n      scale: active ? 0.8 : 0.5,\n      onClick: event => setActive(!active),\n      onPointerOver: event => setHover(true),\n      onPointerOut: event => setHover(false) // onWheel={(event) => setActive(true)}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        args: [2, 2, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: hovered ? 'hotpink' : 'yellow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(Box, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n    return [useFrame];\n  });\n\n  const LoadModel = () => {\n    _s2();\n\n    const gltf = useLoader(GLTFLoader, \"/only_book.glb\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"primitive\", {\n        scale: 0.5,\n        position: [0, -1, 0],\n        castShadow: true,\n        receiveShadow: true,\n        object: gltf.scene,\n        dispose: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: '#fff'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n\n  _s2(LoadModel, \"/mQP3JhHVfBVax7R1fyeo+Vn9YY=\", false, function () {\n    return [useLoader];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(Interfase, {\n      prev: \"archive\",\n      next: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${props.next}`,\n        children: /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Canvas, {\n            shadows: true,\n            performance: {\n              min: 0.5\n            } // dpr={[1, 2]}\n            ,\n            camera: {\n              fov: 45,\n              position: [10, 10, 10]\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"color\", {\n              attach: \"background\",\n              args: ['#1e2243']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n              position: [10, 10, 10]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n              position: [10, 15, 10],\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              position: [0, 0.5, 0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n              enablePan: true,\n              enableZoom: true,\n              enableRotate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Num1;\nexport default Num1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Num1\");","map":{"version":3,"sources":["/Users/sanami/Desktop/react/webgl/src/pages/1.js"],"names":["React","Suspense","OrbitControls","useRef","useState","Canvas","useFrame","useLoader","GLTFLoader","Interfase","BrowserRouter","Router","Switch","Route","Link","Num1","props","Box","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","x","event","LoadModel","gltf","scene","next","min","fov","position"],"mappings":"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","sourcesContent":["import React, { Suspense } from \"react\";\nimport { OrbitControls } from '@react-three/drei'\nimport { useRef, useState } from 'react';\nimport { Canvas, useFrame, useLoader } from '@react-three/fiber'\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport Interfase from \"./../components/Interface\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst Num1 = (props) => {\n    function Box(props) {\n        const mesh = useRef()\n        const [hovered, setHover] = useState(false)\n        const [active, setActive] = useState(false)\n\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n\n        return (\n            <mesh\n                {...props}\n                ref={mesh}\n                castShadow\n                receiveShadow\n                scale={active ? 0.8 : 0.5}\n                onClick={(event) => setActive(!active)}\n                onPointerOver={(event) => setHover(true)}\n                onPointerOut={(event) => setHover(false)}\n            // onWheel={(event) => setActive(true)}\n            >\n                <boxBufferGeometry args={[2, 2, 2]} />\n                <meshStandardMaterial color={hovered ? 'hotpink' : 'yellow'} />\n            </mesh>\n        )\n    }\n\n    const LoadModel = () => {\n\n        const gltf = useLoader(GLTFLoader, \"/only_book.glb\")\n        return (\n            <>\n            <primitive scale={0.5} position={[0, -1, 0]} castShadow\n                receiveShadow\n            object={gltf.scene} dispose={null} />\n            <meshStandardMaterial color={'#fff'} />\n            </>\n        )\n    }\n\n\n    return (\n        <div className=\"daily-canvas\">\n        <Interfase prev=\"archive\" next=\"2\"/>\n\n<Switch>\n                            <Route path={`/${props.next}`} >\n                            \n            <Suspense fallback={<span>loading...</span>}>\n                <Canvas\n                    shadows\n                    performance={{ min: 0.5 }}\n                    // dpr={[1, 2]}\n                    camera={{ fov: 45, position: [10, 10, 10] }}\n                >\n                    <color attach=\"background\" args={['#1e2243']} />\n\n                        <ambientLight />\n                        <pointLight position={[10, 10, 10]} />\n                        <directionalLight position={[10, 15, 10]} color=\"white\" />\n                        <Box position={[0, 0.5, 0]} />\n                        <OrbitControls enablePan={true} enableZoom={true} enableRotate={true} />\n\n                </Canvas>\n            </Suspense>\n            </Route>\n                        </Switch>\n        </div>\n    );\n}\n\nexport default Num1;"]},"metadata":{},"sourceType":"module"}