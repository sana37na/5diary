{"ast":null,"code":"var _jsxFileName = \"/Users/sanami/Desktop/react/webgl/src/components/Webgl.js\";\nimport React, { useEffect } from \"react\";\nimport reactDom from \"react-dom\";\nimport { useRef, useState, useMemo, useLayoutEffect } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Suspense } from \"react/cjs/react.production.min\";\nimport * as Fiber from '@react-three/fiber';\nimport * as Drei from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Webgl = () => {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  function Box(props) {\n    _s();\n\n    const mesh = useRef();\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      castShadow: true,\n      receiveShadow: true,\n      scale: active ? 0.8 : 0.5,\n      onClick: event => setActive(!active),\n      onPointerOver: event => setHover(true),\n      onPointerOut: event => setHover(false) // onWheel={(event) => setActive(true)}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        args: [2, 2, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: hovered ? 'hotpink' : 'yellow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(Box, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n    return [useFrame];\n  });\n\n  const LoadModel = () => {\n    _s2();\n\n    const gltf = useLoader(GLTFLoader, \"/book.glb\");\n    return /*#__PURE__*/_jsxDEV(\"primitive\", {\n      object: gltf.scene,\n      dispose: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s2(LoadModel, \"/mQP3JhHVfBVax7R1fyeo+Vn9YY=\", false, function () {\n    return [useLoader];\n  });\n\n  const UseModel = () => {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(LoadModel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }; // performance: {\n  //     current: 1,\n  //     min: 0.1,\n  //     max: 1,\n  //     debounce: 200,\n  //     regress: () => void,\n  // }\n  // const regress = useThree((state) => state.performance.regress)\n  // useEffect(() => {\n  //     // controls.current?.addEventListener('change', regress)\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-area\",\n    children: /*#__PURE__*/_jsxDEV(Fiber.Canvas, {\n      shadows: true,\n      performance: {\n        min: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Drei.PerspectiveCamera, {\n        makeDefault: true,\n        children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n          position: [10, 10, 10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n          position: [0, 0, 5],\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          position: [0, 0, 0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UseModel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Drei.OrbitControls, {\n        enablePan: true,\n        enabeleZoom: true,\n        enableRotate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Webgl;\nexport default Webgl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Webgl\");","map":{"version":3,"sources":["/Users/sanami/Desktop/react/webgl/src/components/Webgl.js"],"names":["React","useEffect","reactDom","useRef","useState","useMemo","useLayoutEffect","Canvas","useFrame","useLoader","useThree","THREE","GLTFLoader","Suspense","Fiber","Drei","Webgl","Box","props","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","x","event","LoadModel","gltf","scene","UseModel","min"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport reactDom from \"react-dom\";\nimport { useRef, useState, useMemo, useLayoutEffect } from 'react';\nimport { Canvas, useFrame, useLoader, useThree } from '@react-three/fiber'\nimport * as THREE from 'three'\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { Suspense } from \"react/cjs/react.production.min\";\nimport * as Fiber from '@react-three/fiber';\nimport * as Drei from '@react-three/drei';\n\nconst Webgl = () => {\n    function Box(props) {\n        const mesh = useRef()\n        const [hovered, setHover] = useState(false)\n        const [active, setActive] = useState(false)\n\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n\n        return (\n            <mesh\n                {...props}\n                ref={mesh}\n                castShadow\n                receiveShadow\n                scale={active ? 0.8 : 0.5}\n                onClick={(event) => setActive(!active)}\n                onPointerOver={(event) => setHover(true)}\n                onPointerOut={(event) => setHover(false)}\n                // onWheel={(event) => setActive(true)}\n            >\n                <boxBufferGeometry args={[2, 2, 2]} />\n                <meshStandardMaterial color={hovered ? 'hotpink' : 'yellow'} />\n            </mesh>\n        )\n    }\n\n    const LoadModel = () => {\n\n        const gltf = useLoader(GLTFLoader, \"/book.glb\")\n        return(\n            <primitive object={gltf.scene} dispose={null} />\n        )\n    }\n\n    const UseModel = () => {\n        return (\n            <Suspense fallback={null}>\n                <LoadModel />\n            </Suspense>\n        )\n    }\n\n    // performance: {\n    //     current: 1,\n    //     min: 0.1,\n    //     max: 1,\n    //     debounce: 200,\n    //     regress: () => void,\n    // }\n    \n    // const regress = useThree((state) => state.performance.regress)\n    // useEffect(() => {\n    //     // controls.current?.addEventListener('change', regress)\n    // })\n\n    return (\n        <div className=\"canvas-area\">\n            <Fiber.Canvas\n                shadows\n                performance={{ min: 0.5 }}\n            >\n                <Drei.PerspectiveCamera makeDefault>\n\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <directionalLight position={[0, 0, 5]} color=\"red\" />\n                <Box position={[0, 0, 0]} />\n                <UseModel />\n                </Drei.PerspectiveCamera>\n                <Drei.OrbitControls enablePan={true} enabeleZoom={true} enableRotate={true} />\n\n            </Fiber.Canvas>\n        </div>\n    );\n}\nexport default Webgl;"]},"metadata":{},"sourceType":"module"}