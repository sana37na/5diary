{"ast":null,"code":"var _jsxFileName = \"/Users/sanami/Desktop/react/webgl/src/components/Webgl.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport reactDom from \"react-dom\";\nimport { useRef, useState, useMemo, useLayoutEffect } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Webgl = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  function Box(props) {\n    _s();\n\n    const mesh = useRef();\n    const [hovered, setHover] = useState(false);\n    const [active, setActive] = useState(false);\n    useFrame((state, delta) => mesh.current.rotation.x += 0.01);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n      ref: mesh,\n      castShadow: true,\n      receiveShadow: true,\n      scale: active ? 0.8 : 0.5,\n      onClick: event => setActive(!active),\n      onPointerOver: event => setHover(true),\n      onPointerOut: event => setHover(false) // onWheel={(event) => setActive(true)}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        args: [2, 2, 2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: hovered ? 'hotpink' : 'yellow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  } // performance: {\n  //     current: 1,\n  //     min: 0.1,\n  //     max: 1,\n  //     debounce: 200,\n  //     regress: () => void,\n  // }\n\n\n  _s(Box, \"Gf95ovYMxCkb+HRFcD1+zMTFs6g=\", false, function () {\n    return [useFrame];\n  });\n\n  const regress = useThree(state => state.performance.regress);\n  useEffect(() => {// controls.current?.addEventListener('change', regress)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-area\",\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      shadows: true,\n      performance: {\n        min: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        position: [0, 0, 5],\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        position: [0, 0, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Webgl, \"JlEEjp9viYeDGORaUYu6giw/iGw=\", false, function () {\n  return [useThree];\n});\n\n_c = Webgl;\nexport default Webgl;\n\nvar _c;\n\n$RefreshReg$(_c, \"Webgl\");","map":{"version":3,"sources":["/Users/sanami/Desktop/react/webgl/src/components/Webgl.js"],"names":["React","useEffect","reactDom","useRef","useState","useMemo","useLayoutEffect","Canvas","useFrame","useThree","THREE","Webgl","Box","props","mesh","hovered","setHover","active","setActive","state","delta","current","rotation","x","event","regress","performance","min"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoCC,eAApC,QAA2D,OAA3D;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAChB,WAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,UAAMC,IAAI,GAAGX,MAAM,EAAnB;AACA,UAAM,CAACY,OAAD,EAAUC,QAAV,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,UAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AAEAI,IAAAA,QAAQ,CAAC,CAACW,KAAD,EAAQC,KAAR,KAAmBN,IAAI,CAACO,OAAL,CAAaC,QAAb,CAAsBC,CAAtB,IAA2B,IAA/C,CAAR;AAEA,wBACI,qBACQV,KADR;AAEI,MAAA,GAAG,EAAEC,IAFT;AAGI,MAAA,UAAU,MAHd;AAII,MAAA,aAAa,MAJjB;AAKI,MAAA,KAAK,EAAEG,MAAM,GAAG,GAAH,GAAS,GAL1B;AAMI,MAAA,OAAO,EAAGO,KAAD,IAAWN,SAAS,CAAC,CAACD,MAAF,CANjC;AAOI,MAAA,aAAa,EAAGO,KAAD,IAAWR,QAAQ,CAAC,IAAD,CAPtC;AAQI,MAAA,YAAY,EAAGQ,KAAD,IAAWR,QAAQ,CAAC,KAAD,CARrC,CASI;AATJ;AAAA,8BAWI;AAAmB,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAzB;AAAA;AAAA;AAAA;AAAA,cAXJ,eAYI;AAAsB,QAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe;AAAnD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH,GAxBe,CA0BhB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhCgB,KACPH,GADO;AAAA,YAMZJ,QANY;AAAA;;AAiChB,QAAMiB,OAAO,GAAGhB,QAAQ,CAAEU,KAAD,IAAWA,KAAK,CAACO,WAAN,CAAkBD,OAA9B,CAAxB;AACAxB,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,WAAW,EAAE;AAAE0B,QAAAA,GAAG,EAAE;AAAP,OAFjB;AAAA,8BAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAY,QAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAkB,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA5B;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAf;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAnDD;;IAAMhB,K;UAiCcF,Q;;;KAjCdE,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport reactDom from \"react-dom\";\nimport { useRef, useState, useMemo, useLayoutEffect } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport * as THREE from 'three'\n\nconst Webgl = () => {\n    function Box(props) {\n        const mesh = useRef()\n        const [hovered, setHover] = useState(false)\n        const [active, setActive] = useState(false)\n\n        useFrame((state, delta) => (mesh.current.rotation.x += 0.01))\n\n        return (\n            <mesh\n                {...props}\n                ref={mesh}\n                castShadow\n                receiveShadow\n                scale={active ? 0.8 : 0.5}\n                onClick={(event) => setActive(!active)}\n                onPointerOver={(event) => setHover(true)}\n                onPointerOut={(event) => setHover(false)}\n                // onWheel={(event) => setActive(true)}\n            >\n                <boxBufferGeometry args={[2, 2, 2]} />\n                <meshStandardMaterial color={hovered ? 'hotpink' : 'yellow'} />\n            </mesh>\n        )\n    }\n\n    // performance: {\n    //     current: 1,\n    //     min: 0.1,\n    //     max: 1,\n    //     debounce: 200,\n    //     regress: () => void,\n    // }\n    const regress = useThree((state) => state.performance.regress)\n    useEffect(() => {\n        // controls.current?.addEventListener('change', regress)\n    })\n\n    return (\n        <div className=\"canvas-area\">\n            <Canvas\n                shadows\n                performance={{ min: 0.5 }}\n            >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <directionalLight position={[0, 0, 5]} color=\"red\" />\n                <Box position={[0, 0, 0]} />\n            </Canvas>\n        </div>\n    );\n}\nexport default Webgl;"]},"metadata":{},"sourceType":"module"}