{"ast":null,"code":"import * as THREE from 'three';\nimport * as React from 'react';\nimport create from 'zustand';\nimport shallow from 'zustand/shallow';\nimport Reconciler from 'react-reconciler';\nimport { unstable_now, unstable_runWithPriority, unstable_IdlePriority } from 'scheduler';\nimport { useAsset } from 'use-asset';\nimport mergeRefs from 'react-merge-refs';\nimport useMeasure from 'react-use-measure';\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  und: a => a === void 0,\n  arr: a => Array.isArray(a),\n\n  equ(a, b) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false; // Atomic, just compare a against b\n\n    if (is.str(a) || is.num(a) || is.obj(a)) return a === b; // Array, shallow compare first to see if it's a match\n\n    if (is.arr(a) && a == b) return true; // Last resort, go through keys\n\n    let i;\n\n    for (i in a) if (!(i in b)) return false;\n\n    for (i in b) if (a[i] !== b[i]) return false;\n\n    return is.und(i) ? a === b : true;\n  }\n\n};\n\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index;\n}\n\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState(); // Removes every trace of an object from the data store\n\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      internal.hovered.delete(key);\n    }\n  });\n}\n\nfunction createEvents(store) {\n  const temp = new THREE.Vector3();\n  /** Sets up defaultRaycaster */\n\n  function prepareRay(event) {\n    var _raycaster$computeOff;\n\n    const state = store.getState();\n    const {\n      raycaster,\n      mouse,\n      camera,\n      size\n    } = state; // https://github.com/pmndrs/react-three-fiber/pull/782\n    // Events trigger outside of canvas when moved\n\n    const {\n      offsetX,\n      offsetY\n    } = (_raycaster$computeOff = raycaster.computeOffsets == null ? void 0 : raycaster.computeOffsets(event, state)) != null ? _raycaster$computeOff : event;\n    const {\n      width,\n      height\n    } = size;\n    mouse.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    raycaster.setFromCamera(mouse, camera);\n  }\n  /** Calculates delta */\n\n\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n\n\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f$handlers;\n\n      return (_r3f$handlers = obj.__r3f.handlers) == null ? void 0 : _r3f$handlers['onPointer' + name];\n    }));\n  }\n\n  function intersect(filter) {\n    const state = store.getState();\n    const {\n      raycaster,\n      internal\n    } = state; // Skip event handling when noEvents is set\n\n    if (!raycaster.enabled) return [];\n    const seen = new Set();\n    const intersections = []; // Allow callers to eliminate event objects\n\n    const eventsObjects = filter ? filter(internal.interaction) : internal.interaction; // Intersect known handler objects and filter against duplicates\n\n    let intersects = raycaster.intersectObjects(eventsObjects, true).filter(item => {\n      const id = makeId(item);\n      if (seen.has(id)) return false;\n      seen.add(id);\n      return true;\n    }); // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order\n\n    if (raycaster.filter) intersects = raycaster.filter(intersects, state);\n\n    for (const intersect of intersects) {\n      let eventObject = intersect.object; // Bubble event up\n\n      while (eventObject) {\n        var _r3f;\n\n        const handlers = (_r3f = eventObject.__r3f) == null ? void 0 : _r3f.handlers;\n        if (handlers) intersections.push({ ...intersect,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    return intersections;\n  }\n  /**  Creates filtered intersects and returns an array of positive hits */\n\n\n  function patchIntersects(intersections, event) {\n    const {\n      internal\n    } = store.getState(); // If the interaction is captured, make all capturing targets  part of the\n    // intersect.\n\n    if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n      intersections.push(...internal.capturedMap.get(event.pointerId).values());\n    }\n\n    return intersections;\n  }\n  /**  Handles intersections by forwarding them to handlers */\n\n\n  function handleIntersects(intersections, event, callback) {\n    const {\n      raycaster,\n      mouse,\n      camera,\n      internal\n    } = store.getState(); // If anything has been found, forward it to the event listeners\n\n    if (intersections.length) {\n      const unprojectedPoint = temp.set(mouse.x, mouse.y, 0).unproject(camera);\n      const delta = event.type === 'click' ? calculateDistance(event) : 0;\n\n      const releasePointerCapture = id => event.target.releasePointerCapture(id);\n\n      const localState = {\n        stopped: false\n      };\n\n      for (const hit of intersections) {\n        const hasPointerCapture = id => {\n          var _internal$capturedMap, _internal$capturedMap2;\n\n          return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n        };\n\n        const setPointerCapture = id => {\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id).set(hit.eventObject, hit);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(id, new Map([[hit.eventObject, hit]]));\n          } // Call the original event now\n\n\n          event.target.setPointerCapture(id);\n        }; // Add native event props\n\n\n        let extractEventProps = {};\n\n        for (let prop in Object.getPrototypeOf(event)) {\n          let property = event[prop]; // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n\n          if (typeof property !== 'function') extractEventProps[prop] = property;\n        }\n\n        let raycastEvent = { ...hit,\n          ...extractEventProps,\n          spaceX: mouse.x,\n          spaceY: mouse.y,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation: () => {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId); // We only authorize stopPropagation...\n\n            if ( // ...if this pointer hasn't been captured\n            !capturesForPointer || // ... or if the hit object is capturing the pointer\n            capturesForPointer.has(hit.eventObject)) {\n              raycastEvent.stopped = localState.stopped = true; // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n\n              if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(0, intersections.indexOf(hit));\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          sourceEvent: event,\n          // deprecated\n          nativeEvent: event\n        }; // Call subscribers\n\n        callback(raycastEvent); // Event bubbling may be interrupted by stopPropagation\n\n        if (localState.stopped === true) break;\n      }\n    }\n\n    return intersections;\n  }\n\n  function cancelPointer(hits) {\n    const {\n      internal\n    } = store.getState();\n    Array.from(internal.hovered.values()).forEach(hoveredObj => {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!hits.length || !hits.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index)) {\n        const eventObject = hoveredObj.eventObject;\n        const handlers = eventObject.__r3f.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n\n        if (handlers) {\n          // Clear out intersects, they are outdated by now\n          const data = { ...hoveredObj,\n            intersections: hits || []\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    });\n  }\n\n  const handlePointer = name => {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n\n      case 'onLostPointerCapture':\n        return event => {\n          if ('pointerId' in event) {\n            // this will be a problem if one target releases the pointerId\n            // and another one is still keeping it, as the line below\n            // indifferently deletes all capturing references.\n            store.getState().internal.capturedMap.delete(event.pointerId);\n          }\n\n          cancelPointer([]);\n        };\n    } // Any other pointer goes here ...\n\n\n    return event => {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n      prepareRay(event); // Get fresh intersects\n\n      const isPointerMove = name === 'onPointerMove';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = patchIntersects(intersect(filter), event); // Take care of unhover\n\n      if (isPointerMove) cancelPointer(hits);\n      handleIntersects(hits, event, data => {\n        const eventObject = data.eventObject;\n        const handlers = eventObject.__r3f.handlers; // Check presence of handlers\n\n        if (!handlers) return;\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          } // Call mouse move\n\n\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers == null ? void 0 : handlers[name];\n\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (name !== 'onClick' && name !== 'onContextMenu' && name !== 'onDoubleClick' || internal.initialHits.includes(eventObject)) {\n              handler(data);\n              pointerMissed(event, internal.interaction.filter(object => object !== eventObject));\n            }\n          }\n        }\n      }); // Save initial coordinates on pointer-down\n\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      } // If a click yields no results, pass it back to the user as a miss\n\n\n      if ((name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick') && !hits.length) {\n        if (calculateDistance(event) <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n    };\n  };\n\n  function pointerMissed(event, objects) {\n    objects.forEach(object => {\n      var _r3f$handlers2;\n\n      return (_r3f$handlers2 = object.__r3f.handlers) == null ? void 0 : _r3f$handlers2.onPointerMissed == null ? void 0 : _r3f$handlers2.onPointerMissed(event);\n    });\n  }\n\n  return {\n    handlePointer\n  };\n} // Type guard to tell a store from a portal\n\n\nconst isStore = def => def && !!def.getState;\n\nconst getContainer = (container, child) => {\n  var _container$__r3f$root, _container$__r3f;\n\n  return {\n    // If the container is not a root-store then it must be a THREE.Object3D into which part of the\n    // scene is portalled into. Now there can be two variants of this, either that object is part of\n    // the regular jsx tree, in which case it already has __r3f with a valid root attached, or it lies\n    // outside react, in which case we must take the root of the child that is about to be attached to it.\n    root: isStore(container) ? container : (_container$__r3f$root = (_container$__r3f = container.__r3f) == null ? void 0 : _container$__r3f.root) != null ? _container$__r3f$root : child.__r3f.root,\n    // The container is the eventual target into which objects are mounted, it has to be a THREE.Object3D\n    container: isStore(container) ? container.getState().scene : container\n  };\n};\n\nconst DEFAULT = '__default';\nconst EMPTY = {};\nconst FILTER = ['children', 'key', 'ref'];\nlet catalogue = {};\n\nlet extend = objects => void (catalogue = { ...catalogue,\n  ...objects\n}); // Each object in the scene carries a small LocalState descriptor\n\n\nfunction prepare(object, state) {\n  const instance = object;\n\n  if (state != null && state.instance || !instance.__r3f) {\n    instance.__r3f = {\n      root: null,\n      memoizedProps: {},\n      objects: [],\n      ...state\n    };\n  }\n\n  return object;\n}\n\nfunction createRenderer(roots) {\n  function applyProps(instance, newProps, oldProps = {}, accumulative = false) {\n    var _instance$__r3f, _root$getState, _instance$__r3f2; // Filter equals, events and reserved props\n\n\n    const localState = (_instance$__r3f = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f : {};\n    const root = localState.root;\n    const rootState = (_root$getState = root == null ? void 0 : root.getState == null ? void 0 : root.getState()) != null ? _root$getState : {};\n    const sameProps = [];\n    const handlers = [];\n    const newMemoizedProps = {};\n    let i = 0;\n    Object.entries(newProps).forEach(([key, entry]) => {\n      // we don't want children, ref or key in the memoized props\n      if (FILTER.indexOf(key) === -1) {\n        newMemoizedProps[key] = entry;\n      }\n    });\n\n    if (localState.memoizedProps && localState.memoizedProps.args) {\n      newMemoizedProps.args = localState.memoizedProps.args;\n    }\n\n    if (localState.memoizedProps && localState.memoizedProps.attach) {\n      newMemoizedProps.attach = localState.memoizedProps.attach;\n    }\n\n    if (instance.__r3f) {\n      instance.__r3f.memoizedProps = newMemoizedProps;\n    }\n\n    let objectKeys = Object.keys(newProps);\n\n    for (i = 0; i < objectKeys.length; i++) {\n      if (is.equ(newProps[objectKeys[i]], oldProps[objectKeys[i]])) {\n        sameProps.push(objectKeys[i]);\n      } // Event-handlers ...\n      //   are functions, that\n      //   start with \"on\", and\n      //   contain the name \"Pointer\", \"Click\", \"DoubleClick\", \"ContextMenu\", or \"Wheel\"\n\n\n      if (is.fun(newProps[objectKeys[i]]) && /^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(objectKeys[i])) {\n        handlers.push(objectKeys[i]);\n      }\n    } // Catch props that existed, but now exist no more ...\n\n\n    const leftOvers = [];\n\n    if (accumulative) {\n      objectKeys = Object.keys(oldProps);\n\n      for (i = 0; i < objectKeys.length; i++) {\n        if (!newProps.hasOwnProperty(objectKeys[i])) {\n          leftOvers.push(objectKeys[i]);\n        }\n      }\n    }\n\n    const toFilter = [...sameProps, ...FILTER]; // Instances use \"object\" as a reserved identifier\n\n    if ((_instance$__r3f2 = instance.__r3f) != null && _instance$__r3f2.instance) toFilter.push('object');\n    const filteredProps = { ...newProps\n    }; // Removes sameProps and reserved props from newProps\n\n    objectKeys = Object.keys(filteredProps);\n\n    for (i = 0; i < objectKeys.length; i++) {\n      if (toFilter.indexOf(objectKeys[i]) > -1) {\n        delete filteredProps[objectKeys[i]];\n      }\n    } // Collect all new props\n\n\n    const filteredPropsEntries = Object.entries(filteredProps); // Prepend left-overs so they can be reset or removed\n    // Left-overs must come first!\n\n    for (i = 0; i < leftOvers.length; i++) {\n      if (leftOvers[i] !== 'children') {\n        filteredPropsEntries.unshift([leftOvers[i], DEFAULT + 'remove']);\n      }\n    }\n\n    if (filteredPropsEntries.length > 0) {\n      filteredPropsEntries.forEach(([key, value]) => {\n        if (!handlers.includes(key)) {\n          let currentInstance = instance;\n          let targetProp = currentInstance[key];\n\n          if (key.includes('-')) {\n            const entries = key.split('-');\n            targetProp = entries.reduce((acc, key) => acc[key], instance); // If the target is atomic, it forces us to switch the root\n\n            if (!(targetProp && targetProp.set)) {\n              const [name, ...reverseEntries] = entries.reverse();\n              currentInstance = reverseEntries.reverse().reduce((acc, key) => acc[key], instance);\n              key = name;\n            }\n          } // https://github.com/mrdoob/three.js/issues/21209\n          // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n          // has no means to do this. Hence we curate a small collection of value-classes\n          // with their respective constructor/set arguments\n          // For removed props, try to set default values, if possible\n\n\n          if (value === DEFAULT + 'remove') {\n            if (targetProp && targetProp.constructor) {\n              // use the prop constructor to find the default it should be\n              value = new targetProp.constructor(newMemoizedProps.args);\n            } else if (currentInstance.constructor) {\n              // create a blank slate of the instance and copy the particular parameter.\n              // @ts-ignore\n              const defaultClassCall = new currentInstance.constructor(currentInstance.__r3f.memoizedProps.args);\n              value = defaultClassCall[targetProp]; // destory the instance\n\n              if (defaultClassCall.dispose) {\n                defaultClassCall.dispose();\n              }\n            } else {\n              // instance does not have constructor, just set it to 0\n              value = 0;\n            }\n          } // Special treatment for objects with support for set/copy, and layers\n\n\n          if (targetProp && targetProp.set && (targetProp.copy || targetProp instanceof THREE.Layers)) {\n            // If value is an array\n            if (Array.isArray(value)) {\n              if (targetProp.fromArray) {\n                targetProp.fromArray(value);\n              } else {\n                targetProp.set(...value);\n              }\n            } // Test again target.copy(class) next ...\n            else if (targetProp.copy && value && value.constructor && targetProp.constructor.name === value.constructor.name) {\n              targetProp.copy(value);\n            } // If nothing else fits, just set the single value, ignore undefined\n            // https://github.com/react-spring/react-three-fiber/issues/274\n            else if (value !== undefined) {\n              const isColor = targetProp instanceof THREE.Color; // Allow setting array scalars\n\n              if (!isColor && targetProp.setScalar) targetProp.setScalar(value); // Layers have no copy function, we must therefore copy the mask property\n              else if (targetProp instanceof THREE.Layers && value instanceof THREE.Layers) targetProp.mask = value.mask; // Otherwise just set ...\n              else targetProp.set(value); // Auto-convert sRGB colors, for now ...\n              // https://github.com/react-spring/react-three-fiber/issues/344\n\n              if (!rootState.linear && isColor) targetProp.convertSRGBToLinear();\n            } // Else, just overwrite the value\n\n          } else {\n            currentInstance[key] = value; // Auto-convert sRGB textures, for now ...\n            // https://github.com/react-spring/react-three-fiber/issues/344\n\n            if (!rootState.linear && currentInstance[key] instanceof THREE.Texture) currentInstance[key].encoding = THREE.sRGBEncoding;\n          }\n\n          invalidateInstance(instance);\n        }\n      }); // Preemptively delete the instance from the containers interaction\n\n      if (accumulative && root && instance.raycast && localState.handlers) {\n        localState.handlers = undefined;\n        const index = rootState.internal.interaction.indexOf(instance);\n        if (index > -1) rootState.internal.interaction.splice(index, 1);\n      } // Prep interaction handlers\n\n\n      if (handlers.length) {\n        if (accumulative && root && instance.raycast) {\n          rootState.internal.interaction.push(instance);\n        } // Add handlers to the instances handler-map\n\n\n        localState.handlers = handlers.reduce((acc, key) => ({ ...acc,\n          [key]: newProps[key]\n        }), {});\n      } // Call the update lifecycle when it is being updated, but only when it is part of the scene\n\n\n      if (instance.parent) updateInstance(instance);\n    }\n  }\n\n  function invalidateInstance(instance) {\n    var _instance$__r3f3, _instance$__r3f3$root;\n\n    const state = (_instance$__r3f3 = instance.__r3f) == null ? void 0 : (_instance$__r3f3$root = _instance$__r3f3.root) == null ? void 0 : _instance$__r3f3$root.getState == null ? void 0 : _instance$__r3f3$root.getState();\n    if (state && state.internal.frames === 0) state.invalidate();\n  }\n\n  function updateInstance(instance) {\n    instance.onUpdate == null ? void 0 : instance.onUpdate(instance);\n  }\n\n  function createInstance(type, {\n    args = [],\n    ...props\n  }, root, hostContext, internalInstanceHandle) {\n    let name = `${type[0].toUpperCase()}${type.slice(1)}`;\n    let instance; // https://github.com/facebook/react/issues/17147\n    // Portals do not give us a root, they are themselves treated as a root by the reconciler\n    // In order to figure out the actual root we have to climb through fiber internals :(\n\n    if (!isStore(root) && internalInstanceHandle) {\n      const fn = node => {\n        if (!node.return) return node.stateNode && node.stateNode.containerInfo;else return fn(node.return);\n      };\n\n      root = fn(internalInstanceHandle);\n    } // Assert that by now we have a valid root\n\n\n    if (!root || !isStore(root)) throw `No valid root for ${name}!`;\n\n    if (type === 'primitive') {\n      if (props.object === undefined) throw `Primitives without 'object' are invalid!`;\n      const object = props.object;\n      instance = prepare(object, {\n        root,\n        instance: true\n      });\n    } else {\n      const target = catalogue[name] || THREE[name];\n      if (!target) throw `${name} is not part of the THREE namespace! Did you forget to extend? See: https://github.com/pmndrs/react-three-fiber/blob/master/markdown/api.md#using-3rd-party-objects-declaratively`;\n      const isArgsArr = is.arr(args); // Instanciate new object, link it to the root\n\n      instance = prepare(isArgsArr ? new target(...args) : new target(args), {\n        root,\n        // append memoized props with args so it's not forgotten\n        memoizedProps: {\n          args: isArgsArr && args.length === 0 ? null : args\n        }\n      });\n    } // Auto-attach geometries and materials\n\n\n    if (!('attachFns' in props)) {\n      if (name.endsWith('Geometry')) {\n        props = {\n          attach: 'geometry',\n          ...props\n        };\n      } else if (name.endsWith('Material')) {\n        props = {\n          attach: 'material',\n          ...props\n        };\n      }\n    } // It should NOT call onUpdate on object instanciation, because it hasn't been added to the\n    // view yet. If the callback relies on references for instance, they won't be ready yet, this is\n    // why it passes \"true\" here\n\n\n    applyProps(instance, props, {});\n    return instance;\n  }\n\n  function appendChild(parentInstance, child) {\n    let addedAsChild = false;\n\n    if (child) {\n      // The attach attribute implies that the object attaches itself on the parent\n      if (child.attachArray) {\n        if (!is.arr(parentInstance[child.attachArray])) parentInstance[child.attachArray] = [];\n        parentInstance[child.attachArray].push(child);\n      } else if (child.attachObject) {\n        if (!is.obj(parentInstance[child.attachObject[0]])) parentInstance[child.attachObject[0]] = {};\n        parentInstance[child.attachObject[0]][child.attachObject[1]] = child;\n      } else if (child.attach && !is.fun(child.attach)) {\n        parentInstance[child.attach] = child;\n      } else if (is.arr(child.attachFns)) {\n        const [attachFn] = child.attachFns;\n\n        if (is.str(attachFn) && is.fun(parentInstance[attachFn])) {\n          parentInstance[attachFn](child);\n        } else if (is.fun(attachFn)) {\n          attachFn(child, parentInstance);\n        }\n      } else if (child.isObject3D) {\n        // add in the usual parent-child way\n        parentInstance.add(child);\n        addedAsChild = true;\n      }\n\n      if (!addedAsChild) {\n        // This is for anything that used attach, and for non-Object3Ds that don't get attached to props;\n        // that is, anything that's a child in React but not a child in the scenegraph.\n        parentInstance.__r3f.objects.push(child);\n\n        child.parent = parentInstance;\n      }\n\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n\n  function insertBefore(parentInstance, child, beforeChild) {\n    let added = false;\n\n    if (child) {\n      if (child.attachArray) {\n        const array = parentInstance[child.attachArray];\n        if (!is.arr(array)) parentInstance[child.attachArray] = [];\n        array.splice(array.indexOf(beforeChild), 0, child);\n      } else if (child.attachObject || child.attach && !is.fun(child.attach)) {\n        // attach and attachObject don't have an order anyway, so just append\n        return appendChild(parentInstance, child);\n      } else if (child.isObject3D) {\n        child.parent = parentInstance;\n        child.dispatchEvent({\n          type: 'added'\n        });\n        const restSiblings = parentInstance.children.filter(sibling => sibling !== child);\n        const index = restSiblings.indexOf(beforeChild);\n        parentInstance.children = [...restSiblings.slice(0, index), child, ...restSiblings.slice(index)];\n        added = true;\n      }\n\n      if (!added) {\n        parentInstance.__r3f.objects.push(child);\n\n        child.parent = parentInstance;\n      }\n\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n\n  function removeRecursive(array, parent, dispose = false) {\n    if (array) [...array].forEach(child => removeChild(parent, child, dispose));\n  }\n\n  function removeChild(parentInstance, child, dispose) {\n    if (child) {\n      var _child$__r3f2;\n\n      if (parentInstance.__r3f.objects) {\n        const oldLength = parentInstance.__r3f.objects.length;\n        parentInstance.__r3f.objects = parentInstance.__r3f.objects.filter(x => x !== child);\n        const newLength = parentInstance.__r3f.objects.length; // was it in the list?\n\n        if (newLength < oldLength) {\n          // we had also set this, so we must clear it now\n          child.parent = null;\n        }\n      } // Remove attachment\n\n\n      if (child.attachArray) {\n        parentInstance[child.attachArray] = parentInstance[child.attachArray].filter(x => x !== child);\n      } else if (child.attachObject) {\n        delete parentInstance[child.attachObject[0]][child.attachObject[1]];\n      } else if (child.attach && !is.fun(child.attach)) {\n        parentInstance[child.attach] = null;\n      } else if (is.arr(child.attachFns)) {\n        const [, detachFn] = child.attachFns;\n\n        if (is.str(detachFn) && is.fun(parentInstance[detachFn])) {\n          parentInstance[detachFn](child);\n        } else if (is.fun(detachFn)) {\n          detachFn(child, parentInstance);\n        }\n      } else if (child.isObject3D) {\n        var _child$__r3f;\n\n        parentInstance.remove(child); // Remove interactivity\n\n        if ((_child$__r3f = child.__r3f) != null && _child$__r3f.root) {\n          removeInteractivity(child.__r3f.root, child);\n        }\n      } // Allow objects to bail out of recursive dispose alltogether by passing dispose={null}\n      // Never dispose of primitives because their state may be kept outside of React!\n      // In order for an object to be able to dispose it has to have\n      //   - a dispose method,\n      //   - it cannot be an <instance object={...} />\n      //   - it cannot be a THREE.Scene, because three has broken it's own api\n      //\n      // Since disposal is recursive, we can check the optional dispose arg, which will be undefined\n      // when the reconciler calls it, but then carry our own check recursively\n\n\n      const isInstance = (_child$__r3f2 = child.__r3f) == null ? void 0 : _child$__r3f2.instance;\n      const shouldDispose = dispose === undefined ? child.dispose !== null && !isInstance : dispose; // Remove nested child objects. Primitives should not have objects and children that are\n      // attached to them declaratively ...\n\n      if (!isInstance) {\n        var _child$__r3f3;\n\n        removeRecursive((_child$__r3f3 = child.__r3f) == null ? void 0 : _child$__r3f3.objects, child, shouldDispose);\n        removeRecursive(child.children, child, shouldDispose);\n      } // Remove references\n\n\n      if (child.__r3f) {\n        delete child.__r3f.root;\n        delete child.__r3f.objects;\n        delete child.__r3f.handlers;\n        delete child.__r3f.memoizedProps;\n        if (!isInstance) delete child.__r3f;\n      } // Dispose item whenever the reconciler feels like it\n\n\n      if (shouldDispose && child.dispose && child.type !== 'Scene') {\n        unstable_runWithPriority(unstable_IdlePriority, () => child.dispose());\n      }\n\n      invalidateInstance(parentInstance);\n    }\n  }\n\n  function switchInstance(instance, type, newProps, fiber) {\n    const parent = instance.parent;\n    if (!parent) return;\n    const newInstance = createInstance(type, newProps, instance.__r3f.root); // https://github.com/pmndrs/react-three-fiber/issues/1348\n    // When args change the instance has to be re-constructed, which then\n    // forces r3f to re-parent the children and non-scene objects\n\n    if (instance.children) {\n      instance.children.forEach(child => appendChild(newInstance, child));\n      instance.children = [];\n    }\n\n    instance.__r3f.objects.forEach(child => appendChild(newInstance, child));\n\n    instance.__r3f.objects = [];\n    removeChild(parent, instance);\n    appendChild(parent, newInstance) // This evil hack switches the react-internal fiber node\n    // https://github.com/facebook/react/issues/14983\n    // https://github.com/facebook/react/pull/15021\n    ;\n    [fiber, fiber.alternate].forEach(fiber => {\n      if (fiber !== null) {\n        fiber.stateNode = newInstance;\n\n        if (fiber.ref) {\n          if (typeof fiber.ref === 'function') fiber.ref(newInstance);else fiber.ref.current = newInstance;\n        }\n      }\n    });\n  }\n\n  const reconciler = Reconciler({\n    now: unstable_now,\n    createInstance,\n    removeChild,\n    appendChild,\n    appendInitialChild: appendChild,\n    insertBefore,\n    warnsIfNotActing: true,\n    supportsMutation: true,\n    isPrimaryRenderer: false,\n    // @ts-ignore\n    scheduleTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    // @ts-ignore\n    cancelTimeout: is.fun(clearTimeout) ? clearTimeout : undefined,\n    // @ts-ignore\n    setTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    // @ts-ignore\n    clearTimeout: is.fun(clearTimeout) ? clearTimeout : undefined,\n    noTimeout: -1,\n    appendChildToContainer: (parentInstance, child) => {\n      const {\n        container,\n        root\n      } = getContainer(parentInstance, child); // Link current root to the default scene\n\n      container.__r3f.root = root;\n      appendChild(container, child);\n    },\n    removeChildFromContainer: (parentInstance, child) => {\n      const {\n        container\n      } = getContainer(parentInstance, child);\n      removeChild(container, child);\n    },\n    insertInContainerBefore: (parentInstance, child, beforeChild) => {\n      const {\n        container\n      } = getContainer(parentInstance, child);\n      insertBefore(container, child, beforeChild);\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps, fiber) {\n      if (instance.__r3f.instance && newProps.object && newProps.object !== instance) {\n        // <instance object={...} /> where the object reference has changed\n        switchInstance(instance, type, newProps, fiber);\n      } else {\n        // This is a data object, let's extract critical information about it\n        const {\n          args: argsNew = [],\n          ...restNew\n        } = newProps;\n        const {\n          args: argsOld = [],\n          ...restOld\n        } = oldProps; // If it has new props or arguments, then it needs to be re-instanciated\n\n        const hasNewArgs = argsNew.some((value, index) => is.obj(value) ? Object.entries(value).some(([key, val]) => val !== argsOld[index][key]) : value !== argsOld[index]);\n\n        if (hasNewArgs) {\n          // Next we create a new instance and append it again\n          switchInstance(instance, type, newProps, fiber);\n        } else {\n          // Otherwise just overwrite props\n          applyProps(instance, restNew, restOld, true);\n        }\n      }\n    },\n\n    hideInstance(instance) {\n      if (instance.isObject3D) {\n        instance.visible = false;\n        invalidateInstance(instance);\n      }\n    },\n\n    unhideInstance(instance, props) {\n      if (instance.isObject3D && props.visible == null || props.visible) {\n        instance.visible = true;\n        invalidateInstance(instance);\n      }\n    },\n\n    hideTextInstance() {\n      throw new Error('Text is not allowed in the R3F tree.');\n    },\n\n    getPublicInstance(instance) {\n      // TODO: might fix switchInstance (?)\n      return instance;\n    },\n\n    getRootHostContext(rootContainer) {\n      return EMPTY;\n    },\n\n    getChildHostContext(parentHostContext) {\n      return EMPTY;\n    },\n\n    createTextInstance() {},\n\n    finalizeInitialChildren(instance) {\n      // https://github.com/facebook/react/issues/20271\n      // Returning true will trigger commitMount\n      return !!instance.__r3f.handlers;\n    },\n\n    commitMount(instance)\n    /*, type, props*/\n    {\n      // https://github.com/facebook/react/issues/20271\n      // This will make sure events are only added once to the central container\n      if (instance.raycast && instance.__r3f.handlers) instance.__r3f.root.getState().internal.interaction.push(instance);\n    },\n\n    prepareUpdate() {\n      return EMPTY;\n    },\n\n    shouldDeprioritizeSubtree() {\n      return false;\n    },\n\n    prepareForCommit() {\n      return null;\n    },\n\n    preparePortalMount(...args) {// noop\n    },\n\n    resetAfterCommit() {// noop\n    },\n\n    shouldSetTextContent() {\n      return false;\n    },\n\n    clearContainer() {\n      return false;\n    }\n\n  });\n  return {\n    reconciler,\n    applyProps\n  };\n}\n\nconst isRenderer = def => def && !!def.render;\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\n\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst createStore = (applyProps, invalidate, advance, props) => {\n  const {\n    gl,\n    size,\n    shadows = false,\n    linear = false,\n    flat = false,\n    vr = false,\n    orthographic = false,\n    frameloop = 'always',\n    dpr = 1,\n    performance,\n    clock = new THREE.Clock(),\n    raycaster: raycastOptions,\n    camera: cameraOptions,\n    onPointerMissed\n  } = props; // Set shadowmap\n\n  if (shadows) {\n    gl.shadowMap.enabled = true;\n    if (typeof shadows === 'object') Object.assign(gl.shadowMap, shadows);else gl.shadowMap.type = THREE.PCFSoftShadowMap;\n  } // Set color management\n\n\n  if (!linear) {\n    if (!flat) gl.toneMapping = THREE.ACESFilmicToneMapping;\n    gl.outputEncoding = THREE.sRGBEncoding;\n  } // clock.elapsedTime is updated using advance(timestamp)\n\n\n  if (frameloop === 'never') {\n    clock.stop();\n    clock.elapsedTime = 0;\n  }\n\n  const rootState = create((set, get) => {\n    // Create custom raycaster\n    const raycaster = new THREE.Raycaster();\n    const {\n      params,\n      ...options\n    } = raycastOptions || {};\n    applyProps(raycaster, {\n      enabled: true,\n      ...options,\n      params: { ...raycaster.params,\n        ...params\n      }\n    }, {}); // Create default camera\n\n    const isCamera = cameraOptions instanceof THREE.Camera;\n    const camera = isCamera ? cameraOptions : orthographic ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE.PerspectiveCamera(75, 0, 0.1, 1000);\n\n    if (!isCamera) {\n      camera.position.z = 5;\n      if (cameraOptions) applyProps(camera, cameraOptions, {}); // Always look at center by default\n\n      camera.lookAt(0, 0, 0);\n    }\n\n    function setDpr(dpr) {\n      return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], window.devicePixelRatio), dpr[1]) : dpr;\n    }\n\n    const initialDpr = setDpr(dpr);\n    const position = new THREE.Vector3();\n    const defaultTarget = new THREE.Vector3();\n\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height\n      } = size;\n      const aspect = width / height;\n      const distance = camera.getWorldPosition(position).distanceTo(target);\n\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n\n    let performanceTimeout = undefined;\n\n    const setPerformanceCurrent = current => set(state => ({\n      performance: { ...state.performance,\n        current\n      }\n    }));\n\n    return {\n      gl,\n      set,\n      get,\n      invalidate: () => invalidate(get()),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      linear,\n      flat,\n      scene: prepare(new THREE.Scene()),\n      camera,\n      controls: null,\n      raycaster,\n      clock,\n      mouse: new THREE.Vector2(),\n      vr,\n      frameloop,\n      onPointerMissed,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        ...performance,\n        regress: () => {\n          const state = get(); // Clear timeout\n\n          if (performanceTimeout) clearTimeout(performanceTimeout); // Set lower bound performance\n\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min); // Go back to upper bound performance after a while unless something regresses meanwhile\n\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0\n      },\n      viewport: {\n        initialDpr,\n        dpr: initialDpr,\n        width: 0,\n        height: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setSize: (width, height) => {\n        const size = {\n          width,\n          height\n        };\n        set(state => ({\n          size,\n          viewport: { ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => ({\n        viewport: { ...state.viewport,\n          dpr: setDpr(dpr)\n        }\n      })),\n      events: {\n        connected: false\n      },\n      internal: {\n        active: false,\n        priority: 0,\n        frames: 0,\n        lastProps: props,\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        subscribe: (ref, priority = 0) => {\n          set(({\n            internal\n          }) => ({\n            internal: { ...internal,\n              // If this subscription was given a priority, it takes rendering into its own hands\n              // For that reason we switch off automatic rendering and increase the manual flag\n              // As long as this flag is positive (there could be multiple render subscription)\n              // ..there can be no internal rendering at all\n              priority: internal.priority + (priority > 0 ? 1 : 0),\n              // Register subscriber and sort layers from lowest to highest, meaning,\n              // highest priority renders last (on top of the other frames)\n              subscribers: [...internal.subscribers, {\n                ref,\n                priority\n              }].sort((a, b) => a.priority - b.priority)\n            }\n          }));\n          return () => {\n            set(({\n              internal\n            }) => ({\n              internal: { ...internal,\n                // Decrease manual flag if this subscription had a priority\n                priority: internal.priority - (priority > 0 ? 1 : 0),\n                // Remove subscriber from list\n                subscribers: internal.subscribers.filter(s => s.ref !== ref)\n              }\n            }));\n          };\n        }\n      }\n    };\n  }); // Resize camera and renderer on changes to size and pixelratio\n\n  rootState.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      internal\n    } = rootState.getState(); // https://github.com/pmndrs/react-three-fiber/issues/92\n    // Do not mess with the camera if it belongs to the user\n\n    if (!(internal.lastProps.camera instanceof THREE.Camera)) {\n      if (isOrthographicCamera(camera)) {\n        camera.left = size.width / -2;\n        camera.right = size.width / 2;\n        camera.top = size.height / 2;\n        camera.bottom = size.height / -2;\n      } else {\n        camera.aspect = size.width / size.height;\n      }\n\n      camera.updateProjectionMatrix(); // https://github.com/pmndrs/react-three-fiber/issues/178\n      // Update matrix world since the renderer is a frame late\n\n      camera.updateMatrixWorld();\n    } // Update renderer\n\n\n    gl.setPixelRatio(viewport.dpr);\n    gl.setSize(size.width, size.height);\n  }, state => [state.viewport.dpr, state.size], shallow);\n  const state = rootState.getState(); // Update size\n\n  if (size) state.setSize(size.width, size.height); // Invalidate on any change\n\n  rootState.subscribe(state => invalidate(state)); // Return root state\n\n  return rootState;\n};\n\nfunction createSubs(callback, subs) {\n  const index = subs.length;\n  subs.push(callback);\n  return () => void subs.splice(index, 1);\n}\n\nlet i;\nlet globalEffects = [];\nlet globalAfterEffects = [];\nlet globalTailEffects = [];\n\nconst addEffect = callback => createSubs(callback, globalEffects);\n\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\n\nconst addTail = callback => createSubs(callback, globalTailEffects);\n\nfunction run(effects, timestamp) {\n  for (i = 0; i < effects.length; i++) effects[i](timestamp);\n}\n\nfunction render$1(timestamp, state) {\n  // Run local effects\n  let delta = state.clock.getDelta(); // In frameloop='never' mode, clock times are updated using the provided timestamp\n\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  } // Call subscribers (useFrame)\n\n\n  for (i = 0; i < state.internal.subscribers.length; i++) state.internal.subscribers[i].ref.current(state, delta); // Render content\n\n\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera); // Decrease frame count\n\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\n\nfunction createLoop(roots) {\n  let running = false;\n  let repeat;\n\n  function loop(timestamp) {\n    running = true;\n    repeat = 0; // Run effects\n\n    run(globalEffects, timestamp); // Render all roots\n\n    roots.forEach(root => {\n      const state = root.store.getState(); // If the frameloop is invalidated, do not run another frame\n\n      if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0)) repeat += render$1(timestamp, state);\n    }); // Run after-effects\n\n    run(globalAfterEffects, timestamp); // Keep on looping if anything invalidates the frameloop\n\n    if (repeat > 0) return requestAnimationFrame(loop); // Tail call effects, they are called when rendering stops\n    else run(globalTailEffects, timestamp); // Flag end of operation\n\n    running = false;\n  }\n\n  function invalidate(state) {\n    if (!state) return roots.forEach(root => invalidate(root.store.getState()));\n    if (state.vr || !state.internal.active || state.frameloop === 'never') return; // Increase frames, do not go higher than 60\n\n    state.internal.frames = Math.min(60, state.internal.frames + 1); // If the render-loop isn't active, start it\n\n    if (!running) {\n      running = true;\n      requestAnimationFrame(loop);\n    }\n  }\n\n  function advance(timestamp, runGlobalEffects = true, state) {\n    if (runGlobalEffects) run(globalEffects, timestamp);\n    if (!state) roots.forEach(root => render$1(timestamp, root.store.getState()));else render$1(timestamp, state);\n    if (runGlobalEffects) run(globalAfterEffects, timestamp);\n  }\n\n  return {\n    loop,\n    invalidate,\n    advance\n  };\n}\n\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  const names = {\n    onClick: ['click', false],\n    onContextMenu: ['contextmenu', false],\n    onDoubleClick: ['dblclick', false],\n    onWheel: ['wheel', true],\n    onPointerDown: ['pointerdown', true],\n    onPointerUp: ['pointerup', true],\n    onPointerLeave: ['pointerleave', true],\n    onPointerMove: ['pointermove', true],\n    onPointerCancel: ['pointercancel', true],\n    onLostPointerCapture: ['lostpointercapture', true]\n  };\n  return {\n    connected: false,\n    handlers: Object.keys(names).reduce((acc, key) => ({ ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    connect: target => {\n      var _events$handlers;\n\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: { ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events == null ? void 0 : events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = names[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n\n      if (events.connected) {\n        var _events$handlers2;\n\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = names[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: { ...state.events,\n            connected: false\n          }\n        }));\n      }\n    }\n  };\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, []);\n  return null;\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n\n  componentDidCatch(error) {\n    this.props.set(error);\n  }\n\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n\n}\n\nErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n});\n\nconst Canvas = /*#__PURE__*/React.forwardRef(function Canvas({\n  children,\n  fallback,\n  tabIndex,\n  resize,\n  id,\n  style,\n  className,\n  events,\n  ...props\n}, forwardedRef) {\n  const [containerRef, size] = useMeasure({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React.useRef(null);\n  const [block, setBlock] = React.useState(false);\n  const [error, setError] = React.useState(false); // Suspend this component if block is a promise (2nd run)\n\n  if (block) throw block; // Throw exception outwards if anything within canvas throws\n\n  if (error) throw error; // Execute JSX in the reconciler as a layout-effect\n\n  useIsomorphicLayoutEffect(() => {\n    if (size.width > 0 && size.height > 0) {\n      render( /*#__PURE__*/React.createElement(ErrorBoundary, {\n        set: setError\n      }, /*#__PURE__*/React.createElement(React.Suspense, {\n        fallback: /*#__PURE__*/React.createElement(Block, {\n          set: setBlock\n        })\n      }, children)), canvasRef.current, { ...props,\n        size,\n        events: events || createPointerEvents\n      });\n    }\n  }, [size, children]);\n  useIsomorphicLayoutEffect(() => {\n    const container = canvasRef.current;\n    return () => unmountComponentAtNode(container);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    id: id,\n    className: className,\n    tabIndex: tabIndex,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...style\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: mergeRefs([canvasRef, forwardedRef]),\n    style: {\n      display: 'block'\n    }\n  }, fallback));\n});\n\nfunction useThree(selector = state => state, equalityFn) {\n  const useStore = React.useContext(context);\n  if (!useStore) throw `R3F hooks can only be used within the Canvas component!`;\n  return useStore(selector, equalityFn);\n}\n\nfunction useFrame(callback, renderPriority = 0) {\n  const {\n    subscribe\n  } = React.useContext(context).getState().internal; // Update ref\n\n  const ref = React.useRef(callback);\n  React.useLayoutEffect(() => void (ref.current = callback), [callback]); // Subscribe/unsub\n\n  React.useLayoutEffect(() => {\n    const unsubscribe = subscribe(ref, renderPriority);\n    return () => unsubscribe();\n  }, [renderPriority, subscribe]);\n  return null;\n}\n\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {}\n  };\n\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) {\n        data.nodes[obj.name] = obj;\n      }\n\n      if (obj.material && !data.materials[obj.material.name]) {\n        data.materials[obj.material.name] = obj.material;\n      }\n    });\n  }\n\n  return data;\n}\n\nfunction useGraph(object) {\n  return React.useMemo(() => buildGraph(object), [object]);\n}\n\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    // Construct new loader and run extensions\n    const loader = new Proto();\n    if (extensions) extensions(loader); // Go through the urls and load them\n\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (data.scene) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(`Could not load ${input}: ${error.message}`)))));\n  };\n}\n\nfunction useLoader(Proto, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = useAsset(loadingFn(extensions, onProgress), Proto, ...keys); // Return the object/s\n\n  return Array.isArray(input) ? results : results[0];\n}\n\nuseLoader.preload = function (Proto, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return useAsset.preload(loadingFn(extensions), Proto, ...keys);\n};\n\nuseLoader.clear = function (Proto, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return useAsset.clear(Proto, ...keys);\n};\n\nconst roots = new Map();\nconst modes = ['legacy', 'blocking', 'concurrent'];\nconst {\n  invalidate,\n  advance\n} = createLoop(roots);\nconst {\n  reconciler,\n  applyProps\n} = createRenderer();\n\nconst createRendererInstance = (gl, canvas) => isRenderer(gl) ? gl : new THREE.WebGLRenderer({\n  powerPreference: 'high-performance',\n  canvas: canvas,\n  antialias: true,\n  alpha: true,\n  ...gl\n});\n\nfunction render(element, canvas, {\n  gl,\n  size,\n  mode = modes[1],\n  events,\n  onCreated,\n  ...props\n} = {}) {\n  var _store; // Allow size to take on container bounds initially\n\n\n  if (!size) {\n    var _canvas$parentElement, _canvas$parentElement2, _canvas$parentElement3, _canvas$parentElement4;\n\n    size = {\n      width: (_canvas$parentElement = (_canvas$parentElement2 = canvas.parentElement) == null ? void 0 : _canvas$parentElement2.clientWidth) != null ? _canvas$parentElement : 0,\n      height: (_canvas$parentElement3 = (_canvas$parentElement4 = canvas.parentElement) == null ? void 0 : _canvas$parentElement4.clientHeight) != null ? _canvas$parentElement3 : 0\n    };\n  }\n\n  let root = roots.get(canvas);\n  let fiber = root == null ? void 0 : root.fiber;\n  let store = root == null ? void 0 : root.store;\n  let state = (_store = store) == null ? void 0 : _store.getState();\n\n  if (fiber && state) {\n    const lastProps = state.internal.lastProps; // When a root was found, see if any fundamental props must be changed or exchanged\n    // Check pixelratio\n\n    if (props.dpr !== undefined && !is.equ(lastProps.dpr, props.dpr)) state.setDpr(props.dpr); // Check size\n\n    if (!is.equ(lastProps.size, size)) state.setSize(size.width, size.height); // For some props we want to reset the entire root\n    // Changes to the color-space\n\n    const linearChanged = props.linear !== lastProps.linear;\n\n    if (linearChanged) {\n      unmountComponentAtNode(canvas);\n      fiber = undefined;\n    }\n  }\n\n  if (!fiber) {\n    // If no root has been found, make one\n    // Create gl\n    const glRenderer = createRendererInstance(gl, canvas); // Enable VR if requested\n\n    if (props.vr) {\n      glRenderer.xr.enabled = true;\n      glRenderer.setAnimationLoop(timestamp => advance(timestamp, true));\n    } // Create store\n\n\n    store = createStore(applyProps, invalidate, advance, {\n      gl: glRenderer,\n      size,\n      ...props\n    });\n    const state = store.getState(); // Create renderer\n\n    fiber = reconciler.createContainer(store, modes.indexOf(mode), false, null); // Map it\n\n    roots.set(canvas, {\n      fiber,\n      store\n    }); // Store events internally\n\n    if (events) state.set({\n      events: events(store)\n    });\n  }\n\n  if (store && fiber) {\n    reconciler.updateContainer( /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      element: element,\n      onCreated: onCreated,\n      target: canvas\n    }), fiber, null, () => undefined);\n    return store;\n  } else {\n    throw 'Error creating root!';\n  }\n}\n\nfunction Provider({\n  store,\n  element,\n  onCreated,\n  target\n}) {\n  React.useEffect(() => {\n    const state = store.getState(); // Flag the canvas active, rendering will now begin\n\n    state.set(state => ({\n      internal: { ...state.internal,\n        active: true\n      }\n    })); // Connect events\n\n    state.events.connect == null ? void 0 : state.events.connect(target); // Notifiy that init is completed, the scene graph exists, but nothing has yet rendered\n\n    if (onCreated) onCreated(state);\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: store\n  }, element);\n}\n\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          var _state$gl, _state$gl$renderLists, _state$gl2;\n\n          state.events.disconnect == null ? void 0 : state.events.disconnect();\n          (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n          (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n          dispose(state);\n          roots.delete(canvas);\n          if (callback) callback(canvas);\n        }, 500);\n      }\n    });\n  }\n}\n\nfunction dispose(obj) {\n  if (obj.dispose && obj.type !== 'Scene') obj.dispose();\n\n  for (const p in obj) {\n    var _dispose, _ref;\n\n    (_dispose = (_ref = p).dispose) == null ? void 0 : _dispose.call(_ref);\n    delete obj[p];\n  }\n}\n\nconst act = reconciler.act;\nconst hasSymbol = is.fun(Symbol) && Symbol.for;\nconst REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n\nfunction createPortal(children, container, implementation, key = null) {\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo: prepare(container),\n    implementation\n  };\n}\n\nreconciler.injectIntoDevTools({\n  bundleType: process.env.NODE_ENV === 'production' ? 0 : 1,\n  rendererPackageName: '@react-three/fiber',\n  version: '17.0.2'\n});\nexport { Canvas, threeTypes as ReactThreeFiber, roots as _roots, act, addAfterEffect, addEffect, addTail, advance, applyProps, context, createPortal, dispose, createPointerEvents as events, extend, invalidate, reconciler, render, unmountComponentAtNode, useFrame, useGraph, useLoader, useThree };","map":{"version":3,"sources":["/Users/sanami/Documents/GitHub/5diary/node_modules/@react-three/fiber/dist/react-three-fiber.esm.js"],"names":["THREE","React","create","shallow","Reconciler","unstable_now","unstable_runWithPriority","unstable_IdlePriority","useAsset","mergeRefs","useMeasure","threeTypes","Object","freeze","__proto__","is","obj","a","arr","fun","str","num","und","Array","isArray","equ","b","i","makeId","event","eventObject","object","uuid","index","removeInteractivity","store","internal","getState","interaction","filter","o","initialHits","hovered","forEach","value","key","delete","createEvents","temp","Vector3","prepareRay","_raycaster$computeOff","state","raycaster","mouse","camera","size","offsetX","offsetY","computeOffsets","width","height","set","setFromCamera","calculateDistance","dx","initialClick","dy","Math","round","sqrt","filterPointerEvents","objects","some","name","_r3f$handlers","__r3f","handlers","intersect","enabled","seen","Set","intersections","eventsObjects","intersects","intersectObjects","item","id","has","add","_r3f","push","parent","patchIntersects","capturedMap","pointerId","get","values","handleIntersects","callback","length","unprojectedPoint","x","y","unproject","delta","type","releasePointerCapture","target","localState","stopped","hit","hasPointerCapture","_internal$capturedMap","_internal$capturedMap2","setPointerCapture","Map","extractEventProps","prop","getPrototypeOf","property","raycastEvent","spaceX","spaceY","ray","stopPropagation","capturesForPointer","from","find","higher","slice","indexOf","cancelPointer","currentTarget","sourceEvent","nativeEvent","hits","hoveredObj","data","onPointerOut","onPointerLeave","handlePointer","onPointerMissed","isPointerMove","undefined","onPointerOver","onPointerEnter","hoveredItem","onPointerMove","handler","includes","pointerMissed","map","_r3f$handlers2","isStore","def","getContainer","container","child","_container$__r3f$root","_container$__r3f","root","scene","DEFAULT","EMPTY","FILTER","catalogue","extend","prepare","instance","memoizedProps","createRenderer","roots","applyProps","newProps","oldProps","accumulative","_instance$__r3f","_root$getState","_instance$__r3f2","rootState","sameProps","newMemoizedProps","entries","entry","args","attach","objectKeys","keys","test","leftOvers","hasOwnProperty","toFilter","filteredProps","filteredPropsEntries","unshift","currentInstance","targetProp","split","reduce","acc","reverseEntries","reverse","constructor","defaultClassCall","dispose","copy","Layers","fromArray","isColor","Color","setScalar","mask","linear","convertSRGBToLinear","Texture","encoding","sRGBEncoding","invalidateInstance","raycast","splice","updateInstance","_instance$__r3f3","_instance$__r3f3$root","frames","invalidate","onUpdate","createInstance","props","hostContext","internalInstanceHandle","toUpperCase","fn","node","return","stateNode","containerInfo","isArgsArr","endsWith","appendChild","parentInstance","addedAsChild","attachArray","attachObject","attachFns","attachFn","isObject3D","insertBefore","beforeChild","added","array","dispatchEvent","restSiblings","children","sibling","removeRecursive","removeChild","_child$__r3f2","oldLength","newLength","detachFn","_child$__r3f","remove","isInstance","shouldDispose","_child$__r3f3","switchInstance","fiber","newInstance","alternate","ref","current","reconciler","now","appendInitialChild","warnsIfNotActing","supportsMutation","isPrimaryRenderer","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","appendChildToContainer","removeChildFromContainer","insertInContainerBefore","commitUpdate","updatePayload","argsNew","restNew","argsOld","restOld","hasNewArgs","val","hideInstance","visible","unhideInstance","hideTextInstance","Error","getPublicInstance","getRootHostContext","rootContainer","getChildHostContext","parentHostContext","createTextInstance","finalizeInitialChildren","commitMount","prepareUpdate","shouldDeprioritizeSubtree","prepareForCommit","preparePortalMount","resetAfterCommit","shouldSetTextContent","clearContainer","isRenderer","render","isOrthographicCamera","context","createContext","createStore","advance","gl","shadows","flat","vr","orthographic","frameloop","dpr","performance","clock","Clock","raycastOptions","cameraOptions","shadowMap","assign","PCFSoftShadowMap","toneMapping","ACESFilmicToneMapping","outputEncoding","stop","elapsedTime","Raycaster","params","options","isCamera","Camera","OrthographicCamera","PerspectiveCamera","position","z","lookAt","setDpr","min","max","window","devicePixelRatio","initialDpr","defaultTarget","getCurrentViewport","aspect","distance","getWorldPosition","distanceTo","zoom","factor","fov","PI","h","tan","w","performanceTimeout","setPerformanceCurrent","timestamp","runGlobalEffects","Scene","controls","Vector2","debounce","regress","viewport","setSize","events","connected","active","priority","lastProps","subscribers","subscribe","sort","s","left","right","top","bottom","updateProjectionMatrix","updateMatrixWorld","setPixelRatio","createSubs","subs","globalEffects","globalAfterEffects","globalTailEffects","addEffect","addAfterEffect","addTail","run","effects","render$1","getDelta","oldTime","createLoop","running","repeat","loop","requestAnimationFrame","createPointerEvents","names","onClick","onContextMenu","onDoubleClick","onWheel","onPointerDown","onPointerUp","onPointerCancel","onLostPointerCapture","connect","_events$handlers","disconnect","eventName","passive","addEventListener","_events$handlers2","HTMLElement","removeEventListener","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","Block","Promise","ErrorBoundary","Component","error","componentDidCatch","getDerivedStateFromError","Canvas","forwardRef","fallback","tabIndex","resize","style","className","forwardedRef","containerRef","scroll","canvasRef","useRef","block","setBlock","useState","setError","createElement","Suspense","unmountComponentAtNode","overflow","display","useThree","selector","equalityFn","useStore","useContext","useFrame","renderPriority","unsubscribe","buildGraph","nodes","materials","traverse","material","useGraph","useMemo","loadingFn","extensions","onProgress","Proto","input","loader","all","res","reject","load","message","useLoader","results","preload","clear","modes","createRendererInstance","canvas","WebGLRenderer","powerPreference","antialias","alpha","element","mode","onCreated","_store","_canvas$parentElement","_canvas$parentElement2","_canvas$parentElement3","_canvas$parentElement4","parentElement","clientWidth","clientHeight","linearChanged","glRenderer","xr","setAnimationLoop","createContainer","updateContainer","Provider","_state$gl","_state$gl$renderLists","_state$gl2","renderLists","forceContextLoss","p","_dispose","_ref","call","act","hasSymbol","Symbol","for","REACT_PORTAL_TYPE","createPortal","implementation","$$typeof","injectIntoDevTools","bundleType","process","env","NODE_ENV","rendererPackageName","version","ReactThreeFiber","_roots"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport create from 'zustand';\nimport shallow from 'zustand/shallow';\nimport Reconciler from 'react-reconciler';\nimport { unstable_now, unstable_runWithPriority, unstable_IdlePriority } from 'scheduler';\nimport { useAsset } from 'use-asset';\nimport mergeRefs from 'react-merge-refs';\nimport useMeasure from 'react-use-measure';\n\nvar threeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null\n});\n\nconst is = {\n  obj: a => a === Object(a) && !is.arr(a) && typeof a !== 'function',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  und: a => a === void 0,\n  arr: a => Array.isArray(a),\n\n  equ(a, b) {\n    // Wrong type or one of the two undefined, doesn't match\n    if (typeof a !== typeof b || !!a !== !!b) return false; // Atomic, just compare a against b\n\n    if (is.str(a) || is.num(a) || is.obj(a)) return a === b; // Array, shallow compare first to see if it's a match\n\n    if (is.arr(a) && a == b) return true; // Last resort, go through keys\n\n    let i;\n\n    for (i in a) if (!(i in b)) return false;\n\n    for (i in b) if (a[i] !== b[i]) return false;\n\n    return is.und(i) ? a === b : true;\n  }\n\n};\n\nfunction makeId(event) {\n  return (event.eventObject || event.object).uuid + '/' + event.index;\n}\n\nfunction removeInteractivity(store, object) {\n  const {\n    internal\n  } = store.getState(); // Removes every trace of an object from the data store\n\n  internal.interaction = internal.interaction.filter(o => o !== object);\n  internal.initialHits = internal.initialHits.filter(o => o !== object);\n  internal.hovered.forEach((value, key) => {\n    if (value.eventObject === object || value.object === object) {\n      internal.hovered.delete(key);\n    }\n  });\n}\nfunction createEvents(store) {\n  const temp = new THREE.Vector3();\n  /** Sets up defaultRaycaster */\n\n  function prepareRay(event) {\n    var _raycaster$computeOff;\n\n    const state = store.getState();\n    const {\n      raycaster,\n      mouse,\n      camera,\n      size\n    } = state; // https://github.com/pmndrs/react-three-fiber/pull/782\n    // Events trigger outside of canvas when moved\n\n    const {\n      offsetX,\n      offsetY\n    } = (_raycaster$computeOff = raycaster.computeOffsets == null ? void 0 : raycaster.computeOffsets(event, state)) != null ? _raycaster$computeOff : event;\n    const {\n      width,\n      height\n    } = size;\n    mouse.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    raycaster.setFromCamera(mouse, camera);\n  }\n  /** Calculates delta */\n\n\n  function calculateDistance(event) {\n    const {\n      internal\n    } = store.getState();\n    const dx = event.offsetX - internal.initialClick[0];\n    const dy = event.offsetY - internal.initialClick[1];\n    return Math.round(Math.sqrt(dx * dx + dy * dy));\n  }\n  /** Returns true if an instance has a valid pointer-event registered, this excludes scroll, clicks etc */\n\n\n  function filterPointerEvents(objects) {\n    return objects.filter(obj => ['Move', 'Over', 'Enter', 'Out', 'Leave'].some(name => {\n      var _r3f$handlers;\n\n      return (_r3f$handlers = obj.__r3f.handlers) == null ? void 0 : _r3f$handlers['onPointer' + name];\n    }));\n  }\n\n  function intersect(filter) {\n    const state = store.getState();\n    const {\n      raycaster,\n      internal\n    } = state; // Skip event handling when noEvents is set\n\n    if (!raycaster.enabled) return [];\n    const seen = new Set();\n    const intersections = []; // Allow callers to eliminate event objects\n\n    const eventsObjects = filter ? filter(internal.interaction) : internal.interaction; // Intersect known handler objects and filter against duplicates\n\n    let intersects = raycaster.intersectObjects(eventsObjects, true).filter(item => {\n      const id = makeId(item);\n      if (seen.has(id)) return false;\n      seen.add(id);\n      return true;\n    }); // https://github.com/mrdoob/three.js/issues/16031\n    // Allow custom userland intersect sort order\n\n    if (raycaster.filter) intersects = raycaster.filter(intersects, state);\n\n    for (const intersect of intersects) {\n      let eventObject = intersect.object; // Bubble event up\n\n      while (eventObject) {\n        var _r3f;\n\n        const handlers = (_r3f = eventObject.__r3f) == null ? void 0 : _r3f.handlers;\n        if (handlers) intersections.push({ ...intersect,\n          eventObject\n        });\n        eventObject = eventObject.parent;\n      }\n    }\n\n    return intersections;\n  }\n  /**  Creates filtered intersects and returns an array of positive hits */\n\n\n  function patchIntersects(intersections, event) {\n    const {\n      internal\n    } = store.getState(); // If the interaction is captured, make all capturing targets  part of the\n    // intersect.\n\n    if ('pointerId' in event && internal.capturedMap.has(event.pointerId)) {\n      intersections.push(...internal.capturedMap.get(event.pointerId).values());\n    }\n\n    return intersections;\n  }\n  /**  Handles intersections by forwarding them to handlers */\n\n\n  function handleIntersects(intersections, event, callback) {\n    const {\n      raycaster,\n      mouse,\n      camera,\n      internal\n    } = store.getState(); // If anything has been found, forward it to the event listeners\n\n    if (intersections.length) {\n      const unprojectedPoint = temp.set(mouse.x, mouse.y, 0).unproject(camera);\n      const delta = event.type === 'click' ? calculateDistance(event) : 0;\n\n      const releasePointerCapture = id => event.target.releasePointerCapture(id);\n\n      const localState = {\n        stopped: false\n      };\n\n      for (const hit of intersections) {\n        const hasPointerCapture = id => {\n          var _internal$capturedMap, _internal$capturedMap2;\n\n          return (_internal$capturedMap = (_internal$capturedMap2 = internal.capturedMap.get(id)) == null ? void 0 : _internal$capturedMap2.has(hit.eventObject)) != null ? _internal$capturedMap : false;\n        };\n\n        const setPointerCapture = id => {\n          if (internal.capturedMap.has(id)) {\n            // if the pointerId was previously captured, we add the hit to the\n            // event capturedMap.\n            internal.capturedMap.get(id).set(hit.eventObject, hit);\n          } else {\n            // if the pointerId was not previously captured, we create a map\n            // containing the hitObject, and the hit. hitObject is used for\n            // faster access.\n            internal.capturedMap.set(id, new Map([[hit.eventObject, hit]]));\n          } // Call the original event now\n          event.target.setPointerCapture(id);\n        }; // Add native event props\n\n\n        let extractEventProps = {};\n\n        for (let prop in Object.getPrototypeOf(event)) {\n          let property = event[prop]; // Only copy over atomics, leave functions alone as these should be\n          // called as event.nativeEvent.fn()\n\n          if (typeof property !== 'function') extractEventProps[prop] = property;\n        }\n\n        let raycastEvent = { ...hit,\n          ...extractEventProps,\n          spaceX: mouse.x,\n          spaceY: mouse.y,\n          intersections,\n          stopped: localState.stopped,\n          delta,\n          unprojectedPoint,\n          ray: raycaster.ray,\n          camera: camera,\n          // Hijack stopPropagation, which just sets a flag\n          stopPropagation: () => {\n            // https://github.com/pmndrs/react-three-fiber/issues/596\n            // Events are not allowed to stop propagation if the pointer has been captured\n            const capturesForPointer = 'pointerId' in event && internal.capturedMap.get(event.pointerId); // We only authorize stopPropagation...\n\n            if ( // ...if this pointer hasn't been captured\n            !capturesForPointer || // ... or if the hit object is capturing the pointer\n            capturesForPointer.has(hit.eventObject)) {\n              raycastEvent.stopped = localState.stopped = true; // Propagation is stopped, remove all other hover records\n              // An event handler is only allowed to flush other handlers if it is hovered itself\n\n              if (internal.hovered.size && Array.from(internal.hovered.values()).find(i => i.eventObject === hit.eventObject)) {\n                // Objects cannot flush out higher up objects that have already caught the event\n                const higher = intersections.slice(0, intersections.indexOf(hit));\n                cancelPointer([...higher, hit]);\n              }\n            }\n          },\n          // there should be a distinction between target and currentTarget\n          target: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          currentTarget: {\n            hasPointerCapture,\n            setPointerCapture,\n            releasePointerCapture\n          },\n          sourceEvent: event,\n          // deprecated\n          nativeEvent: event\n        }; // Call subscribers\n\n        callback(raycastEvent); // Event bubbling may be interrupted by stopPropagation\n\n        if (localState.stopped === true) break;\n      }\n    }\n\n    return intersections;\n  }\n\n  function cancelPointer(hits) {\n    const {\n      internal\n    } = store.getState();\n    Array.from(internal.hovered.values()).forEach(hoveredObj => {\n      // When no objects were hit or the the hovered object wasn't found underneath the cursor\n      // we call onPointerOut and delete the object from the hovered-elements map\n      if (!hits.length || !hits.find(hit => hit.object === hoveredObj.object && hit.index === hoveredObj.index)) {\n        const eventObject = hoveredObj.eventObject;\n        const handlers = eventObject.__r3f.handlers;\n        internal.hovered.delete(makeId(hoveredObj));\n\n        if (handlers) {\n          // Clear out intersects, they are outdated by now\n          const data = { ...hoveredObj,\n            intersections: hits || []\n          };\n          handlers.onPointerOut == null ? void 0 : handlers.onPointerOut(data);\n          handlers.onPointerLeave == null ? void 0 : handlers.onPointerLeave(data);\n        }\n      }\n    });\n  }\n\n  const handlePointer = name => {\n    // Deal with cancelation\n    switch (name) {\n      case 'onPointerLeave':\n      case 'onPointerCancel':\n        return () => cancelPointer([]);\n\n      case 'onLostPointerCapture':\n        return event => {\n          if ('pointerId' in event) {\n            // this will be a problem if one target releases the pointerId\n            // and another one is still keeping it, as the line below\n            // indifferently deletes all capturing references.\n            store.getState().internal.capturedMap.delete(event.pointerId);\n          }\n\n          cancelPointer([]);\n        };\n    } // Any other pointer goes here ...\n\n\n    return event => {\n      const {\n        onPointerMissed,\n        internal\n      } = store.getState();\n      prepareRay(event); // Get fresh intersects\n\n      const isPointerMove = name === 'onPointerMove';\n      const filter = isPointerMove ? filterPointerEvents : undefined;\n      const hits = patchIntersects(intersect(filter), event); // Take care of unhover\n\n      if (isPointerMove) cancelPointer(hits);\n      handleIntersects(hits, event, data => {\n        const eventObject = data.eventObject;\n        const handlers = eventObject.__r3f.handlers; // Check presence of handlers\n\n        if (!handlers) return;\n\n        if (isPointerMove) {\n          // Move event ...\n          if (handlers.onPointerOver || handlers.onPointerEnter || handlers.onPointerOut || handlers.onPointerLeave) {\n            // When enter or out is present take care of hover-state\n            const id = makeId(data);\n            const hoveredItem = internal.hovered.get(id);\n\n            if (!hoveredItem) {\n              // If the object wasn't previously hovered, book it and call its handler\n              internal.hovered.set(id, data);\n              handlers.onPointerOver == null ? void 0 : handlers.onPointerOver(data);\n              handlers.onPointerEnter == null ? void 0 : handlers.onPointerEnter(data);\n            } else if (hoveredItem.stopped) {\n              // If the object was previously hovered and stopped, we shouldn't allow other items to proceed\n              data.stopPropagation();\n            }\n          } // Call mouse move\n\n\n          handlers.onPointerMove == null ? void 0 : handlers.onPointerMove(data);\n        } else {\n          // All other events ...\n          const handler = handlers == null ? void 0 : handlers[name];\n\n          if (handler) {\n            // Forward all events back to their respective handlers with the exception of click events,\n            // which must use the initial target\n            if (name !== 'onClick' && name !== 'onContextMenu' && name !== 'onDoubleClick' || internal.initialHits.includes(eventObject)) {\n              handler(data);\n              pointerMissed(event, internal.interaction.filter(object => object !== eventObject));\n            }\n          }\n        }\n      }); // Save initial coordinates on pointer-down\n\n      if (name === 'onPointerDown') {\n        internal.initialClick = [event.offsetX, event.offsetY];\n        internal.initialHits = hits.map(hit => hit.eventObject);\n      } // If a click yields no results, pass it back to the user as a miss\n\n\n      if ((name === 'onClick' || name === 'onContextMenu' || name === 'onDoubleClick') && !hits.length) {\n        if (calculateDistance(event) <= 2) {\n          pointerMissed(event, internal.interaction);\n          if (onPointerMissed) onPointerMissed(event);\n        }\n      }\n    };\n  };\n\n  function pointerMissed(event, objects) {\n    objects.forEach(object => {\n      var _r3f$handlers2;\n\n      return (_r3f$handlers2 = object.__r3f.handlers) == null ? void 0 : _r3f$handlers2.onPointerMissed == null ? void 0 : _r3f$handlers2.onPointerMissed(event);\n    });\n  }\n\n  return {\n    handlePointer\n  };\n}\n\n// Type guard to tell a store from a portal\nconst isStore = def => def && !!def.getState;\n\nconst getContainer = (container, child) => {\n  var _container$__r3f$root, _container$__r3f;\n\n  return {\n    // If the container is not a root-store then it must be a THREE.Object3D into which part of the\n    // scene is portalled into. Now there can be two variants of this, either that object is part of\n    // the regular jsx tree, in which case it already has __r3f with a valid root attached, or it lies\n    // outside react, in which case we must take the root of the child that is about to be attached to it.\n    root: isStore(container) ? container : (_container$__r3f$root = (_container$__r3f = container.__r3f) == null ? void 0 : _container$__r3f.root) != null ? _container$__r3f$root : child.__r3f.root,\n    // The container is the eventual target into which objects are mounted, it has to be a THREE.Object3D\n    container: isStore(container) ? container.getState().scene : container\n  };\n};\n\nconst DEFAULT = '__default';\nconst EMPTY = {};\nconst FILTER = ['children', 'key', 'ref'];\nlet catalogue = {};\n\nlet extend = objects => void (catalogue = { ...catalogue,\n  ...objects\n}); // Each object in the scene carries a small LocalState descriptor\n\n\nfunction prepare(object, state) {\n  const instance = object;\n\n  if (state != null && state.instance || !instance.__r3f) {\n    instance.__r3f = {\n      root: null,\n      memoizedProps: {},\n      objects: [],\n      ...state\n    };\n  }\n\n  return object;\n}\n\nfunction createRenderer(roots) {\n  function applyProps(instance, newProps, oldProps = {}, accumulative = false) {\n    var _instance$__r3f, _root$getState, _instance$__r3f2;\n\n    // Filter equals, events and reserved props\n    const localState = (_instance$__r3f = instance == null ? void 0 : instance.__r3f) != null ? _instance$__r3f : {};\n    const root = localState.root;\n    const rootState = (_root$getState = root == null ? void 0 : root.getState == null ? void 0 : root.getState()) != null ? _root$getState : {};\n    const sameProps = [];\n    const handlers = [];\n    const newMemoizedProps = {};\n    let i = 0;\n    Object.entries(newProps).forEach(([key, entry]) => {\n      // we don't want children, ref or key in the memoized props\n      if (FILTER.indexOf(key) === -1) {\n        newMemoizedProps[key] = entry;\n      }\n    });\n\n    if (localState.memoizedProps && localState.memoizedProps.args) {\n      newMemoizedProps.args = localState.memoizedProps.args;\n    }\n\n    if (localState.memoizedProps && localState.memoizedProps.attach) {\n      newMemoizedProps.attach = localState.memoizedProps.attach;\n    }\n\n    if (instance.__r3f) {\n      instance.__r3f.memoizedProps = newMemoizedProps;\n    }\n\n    let objectKeys = Object.keys(newProps);\n\n    for (i = 0; i < objectKeys.length; i++) {\n      if (is.equ(newProps[objectKeys[i]], oldProps[objectKeys[i]])) {\n        sameProps.push(objectKeys[i]);\n      } // Event-handlers ...\n      //   are functions, that\n      //   start with \"on\", and\n      //   contain the name \"Pointer\", \"Click\", \"DoubleClick\", \"ContextMenu\", or \"Wheel\"\n\n\n      if (is.fun(newProps[objectKeys[i]]) && /^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(objectKeys[i])) {\n        handlers.push(objectKeys[i]);\n      }\n    } // Catch props that existed, but now exist no more ...\n\n\n    const leftOvers = [];\n\n    if (accumulative) {\n      objectKeys = Object.keys(oldProps);\n\n      for (i = 0; i < objectKeys.length; i++) {\n        if (!newProps.hasOwnProperty(objectKeys[i])) {\n          leftOvers.push(objectKeys[i]);\n        }\n      }\n    }\n\n    const toFilter = [...sameProps, ...FILTER]; // Instances use \"object\" as a reserved identifier\n\n    if ((_instance$__r3f2 = instance.__r3f) != null && _instance$__r3f2.instance) toFilter.push('object');\n    const filteredProps = { ...newProps\n    }; // Removes sameProps and reserved props from newProps\n\n    objectKeys = Object.keys(filteredProps);\n\n    for (i = 0; i < objectKeys.length; i++) {\n      if (toFilter.indexOf(objectKeys[i]) > -1) {\n        delete filteredProps[objectKeys[i]];\n      }\n    } // Collect all new props\n\n\n    const filteredPropsEntries = Object.entries(filteredProps); // Prepend left-overs so they can be reset or removed\n    // Left-overs must come first!\n\n    for (i = 0; i < leftOvers.length; i++) {\n      if (leftOvers[i] !== 'children') {\n        filteredPropsEntries.unshift([leftOvers[i], DEFAULT + 'remove']);\n      }\n    }\n\n    if (filteredPropsEntries.length > 0) {\n      filteredPropsEntries.forEach(([key, value]) => {\n        if (!handlers.includes(key)) {\n          let currentInstance = instance;\n          let targetProp = currentInstance[key];\n\n          if (key.includes('-')) {\n            const entries = key.split('-');\n            targetProp = entries.reduce((acc, key) => acc[key], instance); // If the target is atomic, it forces us to switch the root\n\n            if (!(targetProp && targetProp.set)) {\n              const [name, ...reverseEntries] = entries.reverse();\n              currentInstance = reverseEntries.reverse().reduce((acc, key) => acc[key], instance);\n              key = name;\n            }\n          } // https://github.com/mrdoob/three.js/issues/21209\n          // HMR/fast-refresh relies on the ability to cancel out props, but threejs\n          // has no means to do this. Hence we curate a small collection of value-classes\n          // with their respective constructor/set arguments\n          // For removed props, try to set default values, if possible\n\n\n          if (value === DEFAULT + 'remove') {\n            if (targetProp && targetProp.constructor) {\n              // use the prop constructor to find the default it should be\n              value = new targetProp.constructor(newMemoizedProps.args);\n            } else if (currentInstance.constructor) {\n              // create a blank slate of the instance and copy the particular parameter.\n              // @ts-ignore\n              const defaultClassCall = new currentInstance.constructor(currentInstance.__r3f.memoizedProps.args);\n              value = defaultClassCall[targetProp]; // destory the instance\n\n              if (defaultClassCall.dispose) {\n                defaultClassCall.dispose();\n              }\n            } else {\n              // instance does not have constructor, just set it to 0\n              value = 0;\n            }\n          } // Special treatment for objects with support for set/copy, and layers\n\n\n          if (targetProp && targetProp.set && (targetProp.copy || targetProp instanceof THREE.Layers)) {\n            // If value is an array\n            if (Array.isArray(value)) {\n              if (targetProp.fromArray) {\n                targetProp.fromArray(value);\n              } else {\n                targetProp.set(...value);\n              }\n            } // Test again target.copy(class) next ...\n            else if (targetProp.copy && value && value.constructor && targetProp.constructor.name === value.constructor.name) {\n                targetProp.copy(value);\n              } // If nothing else fits, just set the single value, ignore undefined\n              // https://github.com/react-spring/react-three-fiber/issues/274\n              else if (value !== undefined) {\n                  const isColor = targetProp instanceof THREE.Color; // Allow setting array scalars\n\n                  if (!isColor && targetProp.setScalar) targetProp.setScalar(value); // Layers have no copy function, we must therefore copy the mask property\n                  else if (targetProp instanceof THREE.Layers && value instanceof THREE.Layers) targetProp.mask = value.mask; // Otherwise just set ...\n                    else targetProp.set(value); // Auto-convert sRGB colors, for now ...\n                  // https://github.com/react-spring/react-three-fiber/issues/344\n\n                  if (!rootState.linear && isColor) targetProp.convertSRGBToLinear();\n                } // Else, just overwrite the value\n\n          } else {\n            currentInstance[key] = value; // Auto-convert sRGB textures, for now ...\n            // https://github.com/react-spring/react-three-fiber/issues/344\n\n            if (!rootState.linear && currentInstance[key] instanceof THREE.Texture) currentInstance[key].encoding = THREE.sRGBEncoding;\n          }\n\n          invalidateInstance(instance);\n        }\n      }); // Preemptively delete the instance from the containers interaction\n\n      if (accumulative && root && instance.raycast && localState.handlers) {\n        localState.handlers = undefined;\n        const index = rootState.internal.interaction.indexOf(instance);\n        if (index > -1) rootState.internal.interaction.splice(index, 1);\n      } // Prep interaction handlers\n\n\n      if (handlers.length) {\n        if (accumulative && root && instance.raycast) {\n          rootState.internal.interaction.push(instance);\n        } // Add handlers to the instances handler-map\n\n\n        localState.handlers = handlers.reduce((acc, key) => ({ ...acc,\n          [key]: newProps[key]\n        }), {});\n      } // Call the update lifecycle when it is being updated, but only when it is part of the scene\n\n\n      if (instance.parent) updateInstance(instance);\n    }\n  }\n\n  function invalidateInstance(instance) {\n    var _instance$__r3f3, _instance$__r3f3$root;\n\n    const state = (_instance$__r3f3 = instance.__r3f) == null ? void 0 : (_instance$__r3f3$root = _instance$__r3f3.root) == null ? void 0 : _instance$__r3f3$root.getState == null ? void 0 : _instance$__r3f3$root.getState();\n    if (state && state.internal.frames === 0) state.invalidate();\n  }\n\n  function updateInstance(instance) {\n    instance.onUpdate == null ? void 0 : instance.onUpdate(instance);\n  }\n\n  function createInstance(type, {\n    args = [],\n    ...props\n  }, root, hostContext, internalInstanceHandle) {\n    let name = `${type[0].toUpperCase()}${type.slice(1)}`;\n    let instance; // https://github.com/facebook/react/issues/17147\n    // Portals do not give us a root, they are themselves treated as a root by the reconciler\n    // In order to figure out the actual root we have to climb through fiber internals :(\n\n    if (!isStore(root) && internalInstanceHandle) {\n      const fn = node => {\n        if (!node.return) return node.stateNode && node.stateNode.containerInfo;else return fn(node.return);\n      };\n\n      root = fn(internalInstanceHandle);\n    } // Assert that by now we have a valid root\n\n\n    if (!root || !isStore(root)) throw `No valid root for ${name}!`;\n\n    if (type === 'primitive') {\n      if (props.object === undefined) throw `Primitives without 'object' are invalid!`;\n      const object = props.object;\n      instance = prepare(object, {\n        root,\n        instance: true\n      });\n    } else {\n      const target = catalogue[name] || THREE[name];\n      if (!target) throw `${name} is not part of the THREE namespace! Did you forget to extend? See: https://github.com/pmndrs/react-three-fiber/blob/master/markdown/api.md#using-3rd-party-objects-declaratively`;\n      const isArgsArr = is.arr(args); // Instanciate new object, link it to the root\n\n      instance = prepare(isArgsArr ? new target(...args) : new target(args), {\n        root,\n        // append memoized props with args so it's not forgotten\n        memoizedProps: {\n          args: isArgsArr && args.length === 0 ? null : args\n        }\n      });\n    } // Auto-attach geometries and materials\n\n\n    if (!('attachFns' in props)) {\n      if (name.endsWith('Geometry')) {\n        props = {\n          attach: 'geometry',\n          ...props\n        };\n      } else if (name.endsWith('Material')) {\n        props = {\n          attach: 'material',\n          ...props\n        };\n      }\n    } // It should NOT call onUpdate on object instanciation, because it hasn't been added to the\n    // view yet. If the callback relies on references for instance, they won't be ready yet, this is\n    // why it passes \"true\" here\n\n\n    applyProps(instance, props, {});\n    return instance;\n  }\n\n  function appendChild(parentInstance, child) {\n    let addedAsChild = false;\n\n    if (child) {\n      // The attach attribute implies that the object attaches itself on the parent\n      if (child.attachArray) {\n        if (!is.arr(parentInstance[child.attachArray])) parentInstance[child.attachArray] = [];\n        parentInstance[child.attachArray].push(child);\n      } else if (child.attachObject) {\n        if (!is.obj(parentInstance[child.attachObject[0]])) parentInstance[child.attachObject[0]] = {};\n        parentInstance[child.attachObject[0]][child.attachObject[1]] = child;\n      } else if (child.attach && !is.fun(child.attach)) {\n        parentInstance[child.attach] = child;\n      } else if (is.arr(child.attachFns)) {\n        const [attachFn] = child.attachFns;\n\n        if (is.str(attachFn) && is.fun(parentInstance[attachFn])) {\n          parentInstance[attachFn](child);\n        } else if (is.fun(attachFn)) {\n          attachFn(child, parentInstance);\n        }\n      } else if (child.isObject3D) {\n        // add in the usual parent-child way\n        parentInstance.add(child);\n        addedAsChild = true;\n      }\n\n      if (!addedAsChild) {\n        // This is for anything that used attach, and for non-Object3Ds that don't get attached to props;\n        // that is, anything that's a child in React but not a child in the scenegraph.\n        parentInstance.__r3f.objects.push(child);\n\n        child.parent = parentInstance;\n      }\n\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n\n  function insertBefore(parentInstance, child, beforeChild) {\n    let added = false;\n\n    if (child) {\n      if (child.attachArray) {\n        const array = parentInstance[child.attachArray];\n        if (!is.arr(array)) parentInstance[child.attachArray] = [];\n        array.splice(array.indexOf(beforeChild), 0, child);\n      } else if (child.attachObject || child.attach && !is.fun(child.attach)) {\n        // attach and attachObject don't have an order anyway, so just append\n        return appendChild(parentInstance, child);\n      } else if (child.isObject3D) {\n        child.parent = parentInstance;\n        child.dispatchEvent({\n          type: 'added'\n        });\n        const restSiblings = parentInstance.children.filter(sibling => sibling !== child);\n        const index = restSiblings.indexOf(beforeChild);\n        parentInstance.children = [...restSiblings.slice(0, index), child, ...restSiblings.slice(index)];\n        added = true;\n      }\n\n      if (!added) {\n        parentInstance.__r3f.objects.push(child);\n\n        child.parent = parentInstance;\n      }\n\n      updateInstance(child);\n      invalidateInstance(child);\n    }\n  }\n\n  function removeRecursive(array, parent, dispose = false) {\n    if (array) [...array].forEach(child => removeChild(parent, child, dispose));\n  }\n\n  function removeChild(parentInstance, child, dispose) {\n    if (child) {\n      var _child$__r3f2;\n\n      if (parentInstance.__r3f.objects) {\n        const oldLength = parentInstance.__r3f.objects.length;\n        parentInstance.__r3f.objects = parentInstance.__r3f.objects.filter(x => x !== child);\n        const newLength = parentInstance.__r3f.objects.length; // was it in the list?\n\n        if (newLength < oldLength) {\n          // we had also set this, so we must clear it now\n          child.parent = null;\n        }\n      } // Remove attachment\n\n\n      if (child.attachArray) {\n        parentInstance[child.attachArray] = parentInstance[child.attachArray].filter(x => x !== child);\n      } else if (child.attachObject) {\n        delete parentInstance[child.attachObject[0]][child.attachObject[1]];\n      } else if (child.attach && !is.fun(child.attach)) {\n        parentInstance[child.attach] = null;\n      } else if (is.arr(child.attachFns)) {\n        const [, detachFn] = child.attachFns;\n\n        if (is.str(detachFn) && is.fun(parentInstance[detachFn])) {\n          parentInstance[detachFn](child);\n        } else if (is.fun(detachFn)) {\n          detachFn(child, parentInstance);\n        }\n      } else if (child.isObject3D) {\n        var _child$__r3f;\n\n        parentInstance.remove(child); // Remove interactivity\n\n        if ((_child$__r3f = child.__r3f) != null && _child$__r3f.root) {\n          removeInteractivity(child.__r3f.root, child);\n        }\n      } // Allow objects to bail out of recursive dispose alltogether by passing dispose={null}\n      // Never dispose of primitives because their state may be kept outside of React!\n      // In order for an object to be able to dispose it has to have\n      //   - a dispose method,\n      //   - it cannot be an <instance object={...} />\n      //   - it cannot be a THREE.Scene, because three has broken it's own api\n      //\n      // Since disposal is recursive, we can check the optional dispose arg, which will be undefined\n      // when the reconciler calls it, but then carry our own check recursively\n\n\n      const isInstance = (_child$__r3f2 = child.__r3f) == null ? void 0 : _child$__r3f2.instance;\n      const shouldDispose = dispose === undefined ? child.dispose !== null && !isInstance : dispose; // Remove nested child objects. Primitives should not have objects and children that are\n      // attached to them declaratively ...\n\n      if (!isInstance) {\n        var _child$__r3f3;\n\n        removeRecursive((_child$__r3f3 = child.__r3f) == null ? void 0 : _child$__r3f3.objects, child, shouldDispose);\n        removeRecursive(child.children, child, shouldDispose);\n      } // Remove references\n\n\n      if (child.__r3f) {\n        delete child.__r3f.root;\n        delete child.__r3f.objects;\n        delete child.__r3f.handlers;\n        delete child.__r3f.memoizedProps;\n        if (!isInstance) delete child.__r3f;\n      } // Dispose item whenever the reconciler feels like it\n\n\n      if (shouldDispose && child.dispose && child.type !== 'Scene') {\n        unstable_runWithPriority(unstable_IdlePriority, () => child.dispose());\n      }\n\n      invalidateInstance(parentInstance);\n    }\n  }\n\n  function switchInstance(instance, type, newProps, fiber) {\n    const parent = instance.parent;\n    if (!parent) return;\n    const newInstance = createInstance(type, newProps, instance.__r3f.root); // https://github.com/pmndrs/react-three-fiber/issues/1348\n    // When args change the instance has to be re-constructed, which then\n    // forces r3f to re-parent the children and non-scene objects\n\n    if (instance.children) {\n      instance.children.forEach(child => appendChild(newInstance, child));\n      instance.children = [];\n    }\n\n    instance.__r3f.objects.forEach(child => appendChild(newInstance, child));\n\n    instance.__r3f.objects = [];\n    removeChild(parent, instance);\n    appendChild(parent, newInstance) // This evil hack switches the react-internal fiber node\n    // https://github.com/facebook/react/issues/14983\n    // https://github.com/facebook/react/pull/15021\n    ;\n    [fiber, fiber.alternate].forEach(fiber => {\n      if (fiber !== null) {\n        fiber.stateNode = newInstance;\n\n        if (fiber.ref) {\n          if (typeof fiber.ref === 'function') fiber.ref(newInstance);else fiber.ref.current = newInstance;\n        }\n      }\n    });\n  }\n\n  const reconciler = Reconciler({\n    now: unstable_now,\n    createInstance,\n    removeChild,\n    appendChild,\n    appendInitialChild: appendChild,\n    insertBefore,\n    warnsIfNotActing: true,\n    supportsMutation: true,\n    isPrimaryRenderer: false,\n    // @ts-ignore\n    scheduleTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    // @ts-ignore\n    cancelTimeout: is.fun(clearTimeout) ? clearTimeout : undefined,\n    // @ts-ignore\n    setTimeout: is.fun(setTimeout) ? setTimeout : undefined,\n    // @ts-ignore\n    clearTimeout: is.fun(clearTimeout) ? clearTimeout : undefined,\n    noTimeout: -1,\n    appendChildToContainer: (parentInstance, child) => {\n      const {\n        container,\n        root\n      } = getContainer(parentInstance, child); // Link current root to the default scene\n\n      container.__r3f.root = root;\n      appendChild(container, child);\n    },\n    removeChildFromContainer: (parentInstance, child) => {\n      const {\n        container\n      } = getContainer(parentInstance, child);\n      removeChild(container, child);\n    },\n    insertInContainerBefore: (parentInstance, child, beforeChild) => {\n      const {\n        container\n      } = getContainer(parentInstance, child);\n      insertBefore(container, child, beforeChild);\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps, fiber) {\n      if (instance.__r3f.instance && newProps.object && newProps.object !== instance) {\n        // <instance object={...} /> where the object reference has changed\n        switchInstance(instance, type, newProps, fiber);\n      } else {\n        // This is a data object, let's extract critical information about it\n        const {\n          args: argsNew = [],\n          ...restNew\n        } = newProps;\n        const {\n          args: argsOld = [],\n          ...restOld\n        } = oldProps; // If it has new props or arguments, then it needs to be re-instanciated\n\n        const hasNewArgs = argsNew.some((value, index) => is.obj(value) ? Object.entries(value).some(([key, val]) => val !== argsOld[index][key]) : value !== argsOld[index]);\n\n        if (hasNewArgs) {\n          // Next we create a new instance and append it again\n          switchInstance(instance, type, newProps, fiber);\n        } else {\n          // Otherwise just overwrite props\n          applyProps(instance, restNew, restOld, true);\n        }\n      }\n    },\n\n    hideInstance(instance) {\n      if (instance.isObject3D) {\n        instance.visible = false;\n        invalidateInstance(instance);\n      }\n    },\n\n    unhideInstance(instance, props) {\n      if (instance.isObject3D && props.visible == null || props.visible) {\n        instance.visible = true;\n        invalidateInstance(instance);\n      }\n    },\n\n    hideTextInstance() {\n      throw new Error('Text is not allowed in the R3F tree.');\n    },\n\n    getPublicInstance(instance) {\n      // TODO: might fix switchInstance (?)\n      return instance;\n    },\n\n    getRootHostContext(rootContainer) {\n      return EMPTY;\n    },\n\n    getChildHostContext(parentHostContext) {\n      return EMPTY;\n    },\n\n    createTextInstance() {},\n\n    finalizeInitialChildren(instance) {\n      // https://github.com/facebook/react/issues/20271\n      // Returning true will trigger commitMount\n      return !!instance.__r3f.handlers;\n    },\n\n    commitMount(instance)\n    /*, type, props*/\n    {\n      // https://github.com/facebook/react/issues/20271\n      // This will make sure events are only added once to the central container\n      if (instance.raycast && instance.__r3f.handlers) instance.__r3f.root.getState().internal.interaction.push(instance);\n    },\n\n    prepareUpdate() {\n      return EMPTY;\n    },\n\n    shouldDeprioritizeSubtree() {\n      return false;\n    },\n\n    prepareForCommit() {\n      return null;\n    },\n\n    preparePortalMount(...args) {// noop\n    },\n\n    resetAfterCommit() {// noop\n    },\n\n    shouldSetTextContent() {\n      return false;\n    },\n\n    clearContainer() {\n      return false;\n    }\n\n  });\n  return {\n    reconciler,\n    applyProps\n  };\n}\n\nconst isRenderer = def => def && !!def.render;\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst context = /*#__PURE__*/React.createContext(null);\n\nconst createStore = (applyProps, invalidate, advance, props) => {\n  const {\n    gl,\n    size,\n    shadows = false,\n    linear = false,\n    flat = false,\n    vr = false,\n    orthographic = false,\n    frameloop = 'always',\n    dpr = 1,\n    performance,\n    clock = new THREE.Clock(),\n    raycaster: raycastOptions,\n    camera: cameraOptions,\n    onPointerMissed\n  } = props; // Set shadowmap\n\n  if (shadows) {\n    gl.shadowMap.enabled = true;\n    if (typeof shadows === 'object') Object.assign(gl.shadowMap, shadows);else gl.shadowMap.type = THREE.PCFSoftShadowMap;\n  } // Set color management\n\n\n  if (!linear) {\n    if (!flat) gl.toneMapping = THREE.ACESFilmicToneMapping;\n    gl.outputEncoding = THREE.sRGBEncoding;\n  } // clock.elapsedTime is updated using advance(timestamp)\n\n\n  if (frameloop === 'never') {\n    clock.stop();\n    clock.elapsedTime = 0;\n  }\n\n  const rootState = create((set, get) => {\n    // Create custom raycaster\n    const raycaster = new THREE.Raycaster();\n    const {\n      params,\n      ...options\n    } = raycastOptions || {};\n    applyProps(raycaster, {\n      enabled: true,\n      ...options,\n      params: { ...raycaster.params,\n        ...params\n      }\n    }, {}); // Create default camera\n\n    const isCamera = cameraOptions instanceof THREE.Camera;\n    const camera = isCamera ? cameraOptions : orthographic ? new THREE.OrthographicCamera(0, 0, 0, 0, 0.1, 1000) : new THREE.PerspectiveCamera(75, 0, 0.1, 1000);\n\n    if (!isCamera) {\n      camera.position.z = 5;\n      if (cameraOptions) applyProps(camera, cameraOptions, {}); // Always look at center by default\n\n      camera.lookAt(0, 0, 0);\n    }\n\n    function setDpr(dpr) {\n      return Array.isArray(dpr) ? Math.min(Math.max(dpr[0], window.devicePixelRatio), dpr[1]) : dpr;\n    }\n\n    const initialDpr = setDpr(dpr);\n    const position = new THREE.Vector3();\n    const defaultTarget = new THREE.Vector3();\n\n    function getCurrentViewport(camera = get().camera, target = defaultTarget, size = get().size) {\n      const {\n        width,\n        height\n      } = size;\n      const aspect = width / height;\n      const distance = camera.getWorldPosition(position).distanceTo(target);\n\n      if (isOrthographicCamera(camera)) {\n        return {\n          width: width / camera.zoom,\n          height: height / camera.zoom,\n          factor: 1,\n          distance,\n          aspect\n        };\n      } else {\n        const fov = camera.fov * Math.PI / 180; // convert vertical fov to radians\n\n        const h = 2 * Math.tan(fov / 2) * distance; // visible height\n\n        const w = h * (width / height);\n        return {\n          width: w,\n          height: h,\n          factor: width / w,\n          distance,\n          aspect\n        };\n      }\n    }\n\n    let performanceTimeout = undefined;\n\n    const setPerformanceCurrent = current => set(state => ({\n      performance: { ...state.performance,\n        current\n      }\n    }));\n\n    return {\n      gl,\n      set,\n      get,\n      invalidate: () => invalidate(get()),\n      advance: (timestamp, runGlobalEffects) => advance(timestamp, runGlobalEffects, get()),\n      linear,\n      flat,\n      scene: prepare(new THREE.Scene()),\n      camera,\n      controls: null,\n      raycaster,\n      clock,\n      mouse: new THREE.Vector2(),\n      vr,\n      frameloop,\n      onPointerMissed,\n      performance: {\n        current: 1,\n        min: 0.5,\n        max: 1,\n        debounce: 200,\n        ...performance,\n        regress: () => {\n          const state = get(); // Clear timeout\n\n          if (performanceTimeout) clearTimeout(performanceTimeout); // Set lower bound performance\n\n          if (state.performance.current !== state.performance.min) setPerformanceCurrent(state.performance.min); // Go back to upper bound performance after a while unless something regresses meanwhile\n\n          performanceTimeout = setTimeout(() => setPerformanceCurrent(get().performance.max), state.performance.debounce);\n        }\n      },\n      size: {\n        width: 0,\n        height: 0\n      },\n      viewport: {\n        initialDpr,\n        dpr: initialDpr,\n        width: 0,\n        height: 0,\n        aspect: 0,\n        distance: 0,\n        factor: 0,\n        getCurrentViewport\n      },\n      setSize: (width, height) => {\n        const size = {\n          width,\n          height\n        };\n        set(state => ({\n          size,\n          viewport: { ...state.viewport,\n            ...getCurrentViewport(camera, defaultTarget, size)\n          }\n        }));\n      },\n      setDpr: dpr => set(state => ({\n        viewport: { ...state.viewport,\n          dpr: setDpr(dpr)\n        }\n      })),\n      events: {\n        connected: false\n      },\n      internal: {\n        active: false,\n        priority: 0,\n        frames: 0,\n        lastProps: props,\n        interaction: [],\n        hovered: new Map(),\n        subscribers: [],\n        initialClick: [0, 0],\n        initialHits: [],\n        capturedMap: new Map(),\n        subscribe: (ref, priority = 0) => {\n          set(({\n            internal\n          }) => ({\n            internal: { ...internal,\n              // If this subscription was given a priority, it takes rendering into its own hands\n              // For that reason we switch off automatic rendering and increase the manual flag\n              // As long as this flag is positive (there could be multiple render subscription)\n              // ..there can be no internal rendering at all\n              priority: internal.priority + (priority > 0 ? 1 : 0),\n              // Register subscriber and sort layers from lowest to highest, meaning,\n              // highest priority renders last (on top of the other frames)\n              subscribers: [...internal.subscribers, {\n                ref,\n                priority\n              }].sort((a, b) => a.priority - b.priority)\n            }\n          }));\n          return () => {\n            set(({\n              internal\n            }) => ({\n              internal: { ...internal,\n                // Decrease manual flag if this subscription had a priority\n                priority: internal.priority - (priority > 0 ? 1 : 0),\n                // Remove subscriber from list\n                subscribers: internal.subscribers.filter(s => s.ref !== ref)\n              }\n            }));\n          };\n        }\n      }\n    };\n  }); // Resize camera and renderer on changes to size and pixelratio\n\n  rootState.subscribe(() => {\n    const {\n      camera,\n      size,\n      viewport,\n      internal\n    } = rootState.getState(); // https://github.com/pmndrs/react-three-fiber/issues/92\n    // Do not mess with the camera if it belongs to the user\n\n    if (!(internal.lastProps.camera instanceof THREE.Camera)) {\n      if (isOrthographicCamera(camera)) {\n        camera.left = size.width / -2;\n        camera.right = size.width / 2;\n        camera.top = size.height / 2;\n        camera.bottom = size.height / -2;\n      } else {\n        camera.aspect = size.width / size.height;\n      }\n\n      camera.updateProjectionMatrix(); // https://github.com/pmndrs/react-three-fiber/issues/178\n      // Update matrix world since the renderer is a frame late\n\n      camera.updateMatrixWorld();\n    } // Update renderer\n\n\n    gl.setPixelRatio(viewport.dpr);\n    gl.setSize(size.width, size.height);\n  }, state => [state.viewport.dpr, state.size], shallow);\n  const state = rootState.getState(); // Update size\n\n  if (size) state.setSize(size.width, size.height); // Invalidate on any change\n\n  rootState.subscribe(state => invalidate(state)); // Return root state\n\n  return rootState;\n};\n\nfunction createSubs(callback, subs) {\n  const index = subs.length;\n  subs.push(callback);\n  return () => void subs.splice(index, 1);\n}\n\nlet i;\nlet globalEffects = [];\nlet globalAfterEffects = [];\nlet globalTailEffects = [];\nconst addEffect = callback => createSubs(callback, globalEffects);\nconst addAfterEffect = callback => createSubs(callback, globalAfterEffects);\nconst addTail = callback => createSubs(callback, globalTailEffects);\n\nfunction run(effects, timestamp) {\n  for (i = 0; i < effects.length; i++) effects[i](timestamp);\n}\n\nfunction render$1(timestamp, state) {\n  // Run local effects\n  let delta = state.clock.getDelta(); // In frameloop='never' mode, clock times are updated using the provided timestamp\n\n  if (state.frameloop === 'never' && typeof timestamp === 'number') {\n    delta = timestamp - state.clock.elapsedTime;\n    state.clock.oldTime = state.clock.elapsedTime;\n    state.clock.elapsedTime = timestamp;\n  } // Call subscribers (useFrame)\n\n\n  for (i = 0; i < state.internal.subscribers.length; i++) state.internal.subscribers[i].ref.current(state, delta); // Render content\n\n\n  if (!state.internal.priority && state.gl.render) state.gl.render(state.scene, state.camera); // Decrease frame count\n\n  state.internal.frames = Math.max(0, state.internal.frames - 1);\n  return state.frameloop === 'always' ? 1 : state.internal.frames;\n}\n\nfunction createLoop(roots) {\n  let running = false;\n  let repeat;\n\n  function loop(timestamp) {\n    running = true;\n    repeat = 0; // Run effects\n\n    run(globalEffects, timestamp); // Render all roots\n\n    roots.forEach(root => {\n      const state = root.store.getState(); // If the frameloop is invalidated, do not run another frame\n\n      if (state.internal.active && (state.frameloop === 'always' || state.internal.frames > 0)) repeat += render$1(timestamp, state);\n    }); // Run after-effects\n\n    run(globalAfterEffects, timestamp); // Keep on looping if anything invalidates the frameloop\n\n    if (repeat > 0) return requestAnimationFrame(loop); // Tail call effects, they are called when rendering stops\n    else run(globalTailEffects, timestamp); // Flag end of operation\n\n    running = false;\n  }\n\n  function invalidate(state) {\n    if (!state) return roots.forEach(root => invalidate(root.store.getState()));\n    if (state.vr || !state.internal.active || state.frameloop === 'never') return; // Increase frames, do not go higher than 60\n\n    state.internal.frames = Math.min(60, state.internal.frames + 1); // If the render-loop isn't active, start it\n\n    if (!running) {\n      running = true;\n      requestAnimationFrame(loop);\n    }\n  }\n\n  function advance(timestamp, runGlobalEffects = true, state) {\n    if (runGlobalEffects) run(globalEffects, timestamp);\n    if (!state) roots.forEach(root => render$1(timestamp, root.store.getState()));else render$1(timestamp, state);\n    if (runGlobalEffects) run(globalAfterEffects, timestamp);\n  }\n\n  return {\n    loop,\n    invalidate,\n    advance\n  };\n}\n\nfunction createPointerEvents(store) {\n  const {\n    handlePointer\n  } = createEvents(store);\n  const names = {\n    onClick: ['click', false],\n    onContextMenu: ['contextmenu', false],\n    onDoubleClick: ['dblclick', false],\n    onWheel: ['wheel', true],\n    onPointerDown: ['pointerdown', true],\n    onPointerUp: ['pointerup', true],\n    onPointerLeave: ['pointerleave', true],\n    onPointerMove: ['pointermove', true],\n    onPointerCancel: ['pointercancel', true],\n    onLostPointerCapture: ['lostpointercapture', true]\n  };\n  return {\n    connected: false,\n    handlers: Object.keys(names).reduce((acc, key) => ({ ...acc,\n      [key]: handlePointer(key)\n    }), {}),\n    connect: target => {\n      var _events$handlers;\n\n      const {\n        set,\n        events\n      } = store.getState();\n      events.disconnect == null ? void 0 : events.disconnect();\n      set(state => ({\n        events: { ...state.events,\n          connected: target\n        }\n      }));\n      Object.entries((_events$handlers = events == null ? void 0 : events.handlers) != null ? _events$handlers : []).forEach(([name, event]) => {\n        const [eventName, passive] = names[name];\n        target.addEventListener(eventName, event, {\n          passive\n        });\n      });\n    },\n    disconnect: () => {\n      const {\n        set,\n        events\n      } = store.getState();\n\n      if (events.connected) {\n        var _events$handlers2;\n\n        Object.entries((_events$handlers2 = events.handlers) != null ? _events$handlers2 : []).forEach(([name, event]) => {\n          if (events && events.connected instanceof HTMLElement) {\n            const [eventName] = names[name];\n            events.connected.removeEventListener(eventName, event);\n          }\n        });\n        set(state => ({\n          events: { ...state.events,\n            connected: false\n          }\n        }));\n      }\n    }\n  };\n}\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nfunction Block({\n  set\n}) {\n  useIsomorphicLayoutEffect(() => {\n    set(new Promise(() => null));\n    return () => set(false);\n  }, []);\n  return null;\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false\n    };\n  }\n\n  componentDidCatch(error) {\n    this.props.set(error);\n  }\n\n  render() {\n    return this.state.error ? null : this.props.children;\n  }\n\n}\n\nErrorBoundary.getDerivedStateFromError = () => ({\n  error: true\n});\n\nconst Canvas = /*#__PURE__*/React.forwardRef(function Canvas({\n  children,\n  fallback,\n  tabIndex,\n  resize,\n  id,\n  style,\n  className,\n  events,\n  ...props\n}, forwardedRef) {\n  const [containerRef, size] = useMeasure({\n    scroll: true,\n    debounce: {\n      scroll: 50,\n      resize: 0\n    },\n    ...resize\n  });\n  const canvasRef = React.useRef(null);\n  const [block, setBlock] = React.useState(false);\n  const [error, setError] = React.useState(false); // Suspend this component if block is a promise (2nd run)\n\n  if (block) throw block; // Throw exception outwards if anything within canvas throws\n\n  if (error) throw error; // Execute JSX in the reconciler as a layout-effect\n\n  useIsomorphicLayoutEffect(() => {\n    if (size.width > 0 && size.height > 0) {\n      render( /*#__PURE__*/React.createElement(ErrorBoundary, {\n        set: setError\n      }, /*#__PURE__*/React.createElement(React.Suspense, {\n        fallback: /*#__PURE__*/React.createElement(Block, {\n          set: setBlock\n        })\n      }, children)), canvasRef.current, { ...props,\n        size,\n        events: events || createPointerEvents\n      });\n    }\n  }, [size, children]);\n  useIsomorphicLayoutEffect(() => {\n    const container = canvasRef.current;\n    return () => unmountComponentAtNode(container);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    id: id,\n    className: className,\n    tabIndex: tabIndex,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      ...style\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: mergeRefs([canvasRef, forwardedRef]),\n    style: {\n      display: 'block'\n    }\n  }, fallback));\n});\n\nfunction useThree(selector = state => state, equalityFn) {\n  const useStore = React.useContext(context);\n  if (!useStore) throw `R3F hooks can only be used within the Canvas component!`;\n  return useStore(selector, equalityFn);\n}\nfunction useFrame(callback, renderPriority = 0) {\n  const {\n    subscribe\n  } = React.useContext(context).getState().internal; // Update ref\n\n  const ref = React.useRef(callback);\n  React.useLayoutEffect(() => void (ref.current = callback), [callback]); // Subscribe/unsub\n\n  React.useLayoutEffect(() => {\n    const unsubscribe = subscribe(ref, renderPriority);\n    return () => unsubscribe();\n  }, [renderPriority, subscribe]);\n  return null;\n}\n\nfunction buildGraph(object) {\n  const data = {\n    nodes: {},\n    materials: {}\n  };\n\n  if (object) {\n    object.traverse(obj => {\n      if (obj.name) {\n        data.nodes[obj.name] = obj;\n      }\n\n      if (obj.material && !data.materials[obj.material.name]) {\n        data.materials[obj.material.name] = obj.material;\n      }\n    });\n  }\n\n  return data;\n}\n\nfunction useGraph(object) {\n  return React.useMemo(() => buildGraph(object), [object]);\n}\n\nfunction loadingFn(extensions, onProgress) {\n  return function (Proto, ...input) {\n    // Construct new loader and run extensions\n    const loader = new Proto();\n    if (extensions) extensions(loader); // Go through the urls and load them\n\n    return Promise.all(input.map(input => new Promise((res, reject) => loader.load(input, data => {\n      if (data.scene) Object.assign(data, buildGraph(data.scene));\n      res(data);\n    }, onProgress, error => reject(`Could not load ${input}: ${error.message}`)))));\n  };\n}\n\nfunction useLoader(Proto, input, extensions, onProgress) {\n  // Use suspense to load async assets\n  const keys = Array.isArray(input) ? input : [input];\n  const results = useAsset(loadingFn(extensions, onProgress), Proto, ...keys); // Return the object/s\n\n  return Array.isArray(input) ? results : results[0];\n}\n\nuseLoader.preload = function (Proto, input, extensions) {\n  const keys = Array.isArray(input) ? input : [input];\n  return useAsset.preload(loadingFn(extensions), Proto, ...keys);\n};\n\nuseLoader.clear = function (Proto, input) {\n  const keys = Array.isArray(input) ? input : [input];\n  return useAsset.clear(Proto, ...keys);\n};\n\nconst roots = new Map();\nconst modes = ['legacy', 'blocking', 'concurrent'];\nconst {\n  invalidate,\n  advance\n} = createLoop(roots);\nconst {\n  reconciler,\n  applyProps\n} = createRenderer();\n\nconst createRendererInstance = (gl, canvas) => isRenderer(gl) ? gl : new THREE.WebGLRenderer({\n  powerPreference: 'high-performance',\n  canvas: canvas,\n  antialias: true,\n  alpha: true,\n  ...gl\n});\n\nfunction render(element, canvas, {\n  gl,\n  size,\n  mode = modes[1],\n  events,\n  onCreated,\n  ...props\n} = {}) {\n  var _store;\n\n  // Allow size to take on container bounds initially\n  if (!size) {\n    var _canvas$parentElement, _canvas$parentElement2, _canvas$parentElement3, _canvas$parentElement4;\n\n    size = {\n      width: (_canvas$parentElement = (_canvas$parentElement2 = canvas.parentElement) == null ? void 0 : _canvas$parentElement2.clientWidth) != null ? _canvas$parentElement : 0,\n      height: (_canvas$parentElement3 = (_canvas$parentElement4 = canvas.parentElement) == null ? void 0 : _canvas$parentElement4.clientHeight) != null ? _canvas$parentElement3 : 0\n    };\n  }\n\n  let root = roots.get(canvas);\n  let fiber = root == null ? void 0 : root.fiber;\n  let store = root == null ? void 0 : root.store;\n  let state = (_store = store) == null ? void 0 : _store.getState();\n\n  if (fiber && state) {\n    const lastProps = state.internal.lastProps; // When a root was found, see if any fundamental props must be changed or exchanged\n    // Check pixelratio\n\n    if (props.dpr !== undefined && !is.equ(lastProps.dpr, props.dpr)) state.setDpr(props.dpr); // Check size\n\n    if (!is.equ(lastProps.size, size)) state.setSize(size.width, size.height); // For some props we want to reset the entire root\n    // Changes to the color-space\n\n    const linearChanged = props.linear !== lastProps.linear;\n\n    if (linearChanged) {\n      unmountComponentAtNode(canvas);\n      fiber = undefined;\n    }\n  }\n\n  if (!fiber) {\n    // If no root has been found, make one\n    // Create gl\n    const glRenderer = createRendererInstance(gl, canvas); // Enable VR if requested\n\n    if (props.vr) {\n      glRenderer.xr.enabled = true;\n      glRenderer.setAnimationLoop(timestamp => advance(timestamp, true));\n    } // Create store\n\n\n    store = createStore(applyProps, invalidate, advance, {\n      gl: glRenderer,\n      size,\n      ...props\n    });\n    const state = store.getState(); // Create renderer\n\n    fiber = reconciler.createContainer(store, modes.indexOf(mode), false, null); // Map it\n\n    roots.set(canvas, {\n      fiber,\n      store\n    }); // Store events internally\n\n    if (events) state.set({\n      events: events(store)\n    });\n  }\n\n  if (store && fiber) {\n    reconciler.updateContainer( /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      element: element,\n      onCreated: onCreated,\n      target: canvas\n    }), fiber, null, () => undefined);\n    return store;\n  } else {\n    throw 'Error creating root!';\n  }\n}\n\nfunction Provider({\n  store,\n  element,\n  onCreated,\n  target\n}) {\n  React.useEffect(() => {\n    const state = store.getState(); // Flag the canvas active, rendering will now begin\n\n    state.set(state => ({\n      internal: { ...state.internal,\n        active: true\n      }\n    })); // Connect events\n\n    state.events.connect == null ? void 0 : state.events.connect(target); // Notifiy that init is completed, the scene graph exists, but nothing has yet rendered\n\n    if (onCreated) onCreated(state);\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: store\n  }, element);\n}\n\nfunction unmountComponentAtNode(canvas, callback) {\n  const root = roots.get(canvas);\n  const fiber = root == null ? void 0 : root.fiber;\n\n  if (fiber) {\n    const state = root == null ? void 0 : root.store.getState();\n    if (state) state.internal.active = false;\n    reconciler.updateContainer(null, fiber, null, () => {\n      if (state) {\n        setTimeout(() => {\n          var _state$gl, _state$gl$renderLists, _state$gl2;\n\n          state.events.disconnect == null ? void 0 : state.events.disconnect();\n          (_state$gl = state.gl) == null ? void 0 : (_state$gl$renderLists = _state$gl.renderLists) == null ? void 0 : _state$gl$renderLists.dispose == null ? void 0 : _state$gl$renderLists.dispose();\n          (_state$gl2 = state.gl) == null ? void 0 : _state$gl2.forceContextLoss == null ? void 0 : _state$gl2.forceContextLoss();\n          dispose(state);\n          roots.delete(canvas);\n          if (callback) callback(canvas);\n        }, 500);\n      }\n    });\n  }\n}\n\nfunction dispose(obj) {\n  if (obj.dispose && obj.type !== 'Scene') obj.dispose();\n\n  for (const p in obj) {\n    var _dispose, _ref;\n    (_dispose = (_ref = p).dispose) == null ? void 0 : _dispose.call(_ref);\n    delete obj[p];\n  }\n}\n\nconst act = reconciler.act;\nconst hasSymbol = is.fun(Symbol) && Symbol.for;\nconst REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n\nfunction createPortal(children, container, implementation, key = null) {\n  return {\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo: prepare(container),\n    implementation\n  };\n}\n\nreconciler.injectIntoDevTools({\n  bundleType: process.env.NODE_ENV === 'production' ? 0 : 1,\n  rendererPackageName: '@react-three/fiber',\n  version: '17.0.2'\n});\n\nexport { Canvas, threeTypes as ReactThreeFiber, roots as _roots, act, addAfterEffect, addEffect, addTail, advance, applyProps, context, createPortal, dispose, createPointerEvents as events, extend, invalidate, reconciler, render, unmountComponentAtNode, useFrame, useGraph, useLoader, useThree };\n"]},"metadata":{},"sourceType":"module"}